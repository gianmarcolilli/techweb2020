{"version":3,"sources":["./src/app/components/puzzle/puzzle.component.ts","./src/app/components/puzzle/puzzle.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/autore/modifica/modifica.component.ts","./src/app/components/autore/modifica/modifica.component.html","./src/environments/environment.ts","./src/app/components/visualizza/visualizza.component.ts","./src/app/components/visualizza/visualizza.component.html","./src/app/components/autore/configura/configura.component.ts","./src/app/components/autore/configura/configura.component.html","./src/app/components/autore/configura/cancellazione-dialog.html","./src/app/components/auth/signup/signup.component.ts","./src/app/components/auth/signup/signup.component.html","./src/app/components/auth/login/login.component.ts","./src/app/components/auth/login/login.component.html","./src/app/components/autore/autore.component.ts","./src/app/components/autore/autore.component.html","./src/app/components/autore/upload-dialog.html","./src/app/components/player/player.component.ts","./src/app/components/player/player.component.html","./src/app/components/dragndrop/dragndrop.component.ts","./src/app/components/dragndrop/dragndrop.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home-page/home-page.component.ts","./src/app/components/home-page/home-page.component.html","./src/app/components/auth/auth.guard.ts","./src/app/components/autore/mime-type.validator.ts","./src/app/components/auth/auth-interceptor.ts","./src/app/components/auth/auth.service.ts","./src/app/components/classifica/classifica.component.ts","./src/app/components/classifica/classifica.component.html","./src/app/app-routing.module.ts","./src/app/services/dummy-api.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, HostListener, NgModule, ViewChild, OnInit } from '@angular/core';\r\nimport {\r\n  CdkDrag,\r\n  CdkDragStart,\r\n  CdkDropList, CdkDropListGroup, CdkDragMove, CdkDragEnter,\r\n  moveItemInArray\r\n} from \"@angular/cdk/drag-drop\";\r\nimport { ViewportRuler } from \"@angular/cdk/overlay\";\r\nimport { VisualizzaComponent } from '../visualizza/visualizza.component';\r\nimport { timer } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-puzzle',\r\n  templateUrl: './puzzle.component.html',\r\n  styleUrls: ['./puzzle.component.scss']\r\n})\r\nexport class PuzzleComponent implements OnInit {\r\n\r\n\r\n  @Input('puzzleUrl') imageUrl: string;\r\n  @Input('difficulty') difficulty: number;\r\n\r\n  @ViewChild(CdkDropListGroup) listGroup: CdkDropListGroup<CdkDropList>;\r\n  @ViewChild(CdkDropList) placeholder: CdkDropList;\r\n\r\n  public items: Array<number> = [];\r\n\r\n  public target: CdkDropList;\r\n  public targetIndex: number;\r\n  public source: CdkDropList;\r\n  public sourceIndex: number;\r\n  public dragIndex: number;\r\n  public activeContainer;\r\n\r\n  imageName: string;\r\n  steps: number = 0;\r\n  isCompleted: boolean = false;\r\n  totalBoxes: number;\r\n  boxSize: number;\r\n  Image: any[] = [];\r\n  imageSize: number;\r\n  timeVar: any;\r\n  timer: any = timer(0, 1000);\r\n  ticks: string = '0:00';\r\n\r\n  hoProceduto = false;\r\n\r\n  //Quelli che saranno @Input\r\n  // imageUrl:string = 'https://i.imgur.com/4X6O8T7.jpg'\r\n  // difficulty: number = 3\r\n\r\n  constructor(private viewportRuler: ViewportRuler, private visComp: VisualizzaComponent) {\r\n    this.target = null;\r\n    this.source = null;\r\n    this.getScreenSize();\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  getScreenSize(event?) {\r\n    this.reset();\r\n    this.imageSize = window.innerWidth * 0.8;\r\n    this.initializeGame();\r\n    this.breakImageParts();\r\n\r\n    //Usare shuffle\r\n    // this.reRandomize();\r\n    this.shuffle();\r\n  }\r\n\r\n  verifyAccomplishment() {\r\n    let complete = true\r\n\r\n    for (let i = 0; i < this.Image.length; i++) {\r\n      if (this.Image[i].index != (this.items[i] - 1)) {\r\n        complete = false;\r\n        return complete;\r\n      }\r\n    }\r\n\r\n    this.timeVar.unsubscribe();\r\n    return complete\r\n  }\r\n\r\n  avanzamentoStep() {\r\n    if (this.isCompleted) {\r\n      this.hoProceduto=true;\r\n      this.visComp.gestisciAvanzamento(undefined);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    for (let i = 0; i < (Math.pow(this.difficulty, 2)); i++) {\r\n      this.items.push(i + 1)\r\n    }\r\n\r\n    this.imageName = this.imageUrl\r\n      .substr(this.imageUrl.lastIndexOf('/') + 1)\r\n      .split('.')[0];\r\n    this.initImageUrl();\r\n    this.startGame();\r\n  }\r\n\r\n  initializeGame(): void {\r\n    this.boxSize = 100 / (this.difficulty - 1);\r\n    this.totalBoxes = this.difficulty * this.difficulty;\r\n  }\r\n\r\n  reset(): void {\r\n    this.Image = [];\r\n  }\r\n\r\n  initImageUrl() {\r\n    if (this.imageUrl.startsWith('http')) {\r\n      this.imageUrl = this.imageUrl;\r\n    } else if (this.imageUrl.startsWith('data:image/')) {\r\n      this.imageUrl = this.imageUrl;\r\n    } else {\r\n      this.imageUrl = './assets/images/' + this.imageUrl;\r\n    }\r\n  }\r\n\r\n  startGame(): void {\r\n    this.getScreenSize();\r\n    if (this.timeVar) {\r\n      this.timeVar.unsubscribe();\r\n    }\r\n    this.timeVar = this.timer.subscribe((t) => {\r\n      this.settime(t);\r\n    });\r\n  }\r\n\r\n  settime(t: number): void {\r\n    this.ticks = Math.floor(t / 60).toLocaleString('en-US', {\r\n      minimumIntegerDigits: 2,\r\n      useGrouping: false,\r\n    }) + ':' + (t % 60).toLocaleString('en-US', {\r\n      minimumIntegerDigits: 2,\r\n      useGrouping: false,\r\n    });\r\n  }\r\n\r\n  breakImageParts() {\r\n    for (let i = 0; i < this.totalBoxes; i++) {\r\n      const x: string = (this.boxSize * (i % (this.difficulty))) + '%';\r\n      const y: string = (this.boxSize * Math.floor(i / (this.difficulty))) + '%';\r\n      let img: ImageBox = new ImageBox();\r\n      img.x_pos = x;\r\n      img.y_pos = y;\r\n      img.index = i;\r\n      this.Image.push(img);\r\n    }\r\n    this.boxSize = this.imageSize / this.difficulty;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    let phElement = this.placeholder.element.nativeElement;\r\n\r\n    phElement.style.display = 'none';\r\n    phElement.parentElement.removeChild(phElement);\r\n  }\r\n\r\n  shuffle() {\r\n    this.items.sort(function () {\r\n      return .5 - Math.random();\r\n    });\r\n  }\r\n\r\n  dragMoved(e: CdkDragMove) {\r\n    let point = this.getPointerPositionOnPage(e.event);\r\n\r\n    this.listGroup._items.forEach(dropList => {\r\n      if (__isInsideDropListClientRect(dropList, point.x, point.y)) {\r\n        this.activeContainer = dropList;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  dropListDropped($event) {\r\n    if (!this.target)\r\n      return;\r\n\r\n    this.steps++;\r\n    let phElement = this.placeholder.element.nativeElement;\r\n    let parent = phElement.parentElement;\r\n\r\n    phElement.style.display = 'none';\r\n\r\n    parent.removeChild(phElement);\r\n    parent.appendChild(phElement);\r\n    parent.insertBefore(this.source.element.nativeElement, parent.children[this.sourceIndex]);\r\n\r\n    this.target = null;\r\n    this.source = null;\r\n\r\n    if (this.sourceIndex != this.targetIndex) {\r\n      moveItemInArray(this.items, this.sourceIndex, this.targetIndex);\r\n      this.isCompleted = this.verifyAccomplishment()\r\n    }\r\n  }\r\n\r\n  dropListEnterPredicate = (drag: CdkDrag, drop: CdkDropList) => {\r\n    if (drop == this.placeholder)\r\n      return true;\r\n\r\n    if (drop != this.activeContainer)\r\n      return false;\r\n\r\n    let phElement = this.placeholder.element.nativeElement;\r\n    let sourceElement = drag.dropContainer.element.nativeElement;\r\n    let dropElement = drop.element.nativeElement;\r\n\r\n    let dragIndex = __indexOf(dropElement.parentElement.children, (this.source ? phElement : sourceElement));\r\n    let dropIndex = __indexOf(dropElement.parentElement.children, dropElement);\r\n\r\n    if (!this.source) {\r\n      this.sourceIndex = dragIndex;\r\n      this.source = drag.dropContainer;\r\n\r\n      phElement.style.width = sourceElement.clientWidth + 'px';\r\n      phElement.style.height = sourceElement.clientHeight + 'px';\r\n\r\n      sourceElement.parentElement.removeChild(sourceElement);\r\n    }\r\n\r\n    this.targetIndex = dropIndex;\r\n    this.target = drop;\r\n\r\n    phElement.style.display = '';\r\n    dropElement.parentElement.insertBefore(phElement, (dropIndex > dragIndex\r\n      ? dropElement.nextSibling : dropElement));\r\n\r\n    this.placeholder._dropListRef.enter(drag._dragRef, drag.element.nativeElement.offsetLeft, drag.element.nativeElement.offsetTop)\r\n    return false;\r\n  }\r\n\r\n  /** Determines the point of the page that was touched by the user. */\r\n  getPointerPositionOnPage(event: MouseEvent | TouchEvent) {\r\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\r\n    const point = __isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\r\n    const scrollPosition = this.viewportRuler.getViewportScrollPosition();\r\n\r\n    return {\r\n      x: point.pageX - scrollPosition.left,\r\n      y: point.pageY - scrollPosition.top\r\n    };\r\n  }\r\n}\r\n\r\nfunction __indexOf(collection, node) {\r\n  return Array.prototype.indexOf.call(collection, node);\r\n};\r\n\r\n/** Determines whether an event is a touch event. */\r\nfunction __isTouchEvent(event: MouseEvent | TouchEvent): event is TouchEvent {\r\n  return event.type.startsWith('touch');\r\n}\r\n\r\nfunction __isInsideDropListClientRect(dropList: CdkDropList, x: number, y: number) {\r\n  const { top, bottom, left, right } = dropList.element.nativeElement.getBoundingClientRect();\r\n  return y >= top && y <= bottom && x >= left && x <= right;\r\n}\r\n\r\nclass ImageBox {\r\n  x_pos: string;\r\n  y_pos: string;\r\n  index: number;\r\n}\r\n","<div class=\"example-container\" cdkDropListGroup>\r\n  <div\r\n    [ngStyle]=\"{ width: '' + imageSize + 'px' }\"\r\n    cdkDropList\r\n    [cdkDropListEnterPredicate]=\"dropListEnterPredicate\"\r\n    (cdkDropListDropped)=\"dropListDropped($event)\"\r\n  ></div>\r\n  <div\r\n    cdkDropList\r\n    *ngFor=\"let itm of items; index as i\"\r\n    [cdkDropListEnterPredicate]=\"dropListEnterPredicate\"\r\n    (cdkDropListDropped)=\"dropListDropped($event)\"\r\n  >\r\n    <div\r\n      cdkDrag\r\n      class=\"example-box\"\r\n      (cdkDragMoved)=\"dragMoved($event)\"\r\n      [style.width.px]=\"boxSize\"\r\n      [style.height.px]=\"boxSize\"\r\n      [ngStyle]=\"{\r\n        'background-image': 'url(' + imageUrl + ') ',\r\n        'background-repeat': 'no-repeat',\r\n        'background-position':\r\n          '' + Image[itm - 1].x_pos + ' ' + Image[itm - 1].y_pos + '',\r\n        'background-size': '' + difficulty * 100 + '% ' + difficulty * 100 + '%'\r\n      }\"\r\n    ></div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"successMessage\" *ngIf=\"isCompleted\">\r\n  <p>Ottimo lavoro, hai completato il puzzle!</p>\r\n  <br />\r\n  <p>Hai impiegato {{ ticks }} e {{ steps }} mosse.</p>\r\n  <button mat-fab color=\"primary\" class=\"my-fab-button\" [disabled]=\"hoProceduto\">\r\n    <i class=\"material-icons\" (click)=\"avanzamentoStep()\" >play_arrow</i>\r\n  </button>\r\n</div>\r\n<div *ngIf=\"!isCompleted\" class=\"score-detail\">\r\n  <p>Tempo: {{ ticks }}</p>\r\n  <p>Mosse : {{ steps }}</p>\r\n</div>\r\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\n\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  showFiller = false;\r\n  userIsAuthenticated = false;\r\n  private authListenerSubs: Subscription;\r\n\r\n  @Input('my-title') myTitle: string;\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n//navigazione verso HomePage\r\n  navigateToHome() {\r\n    this.router.navigateByUrl(\"\")\r\n  }\r\n\r\n  //navigazione verso component autore\r\n  navigateToAutore() {\r\n    this.router.navigateByUrl(\"autore\")\r\n  }\r\n\r\n  //navigazione verso component player\r\n  navigateToPlayer() {\r\n    this.router.navigateByUrl(\"player\")\r\n  }\r\n\r\n  ngOnInit() {\r\n    //per eseguire l'autenticazione\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authListenerSubs = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe(isAuthenticated => {\r\n        this.userIsAuthenticated = isAuthenticated;\r\n      });\r\n  }\r\n\r\n  //per eseguire logout da autore\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  //completa il logout tramite unsubscribe\r\n  ngOnDestroy() {\r\n    this.authListenerSubs.unsubscribe();\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <button\r\n    mat-button\r\n    (click)=\"navigateToHome()\"\r\n    class=\"example-icon\"\r\n    aria-label=\"Example icon-button with home icon\"\r\n  >\r\n    <a id=\"stemma\">M&M</a>\r\n  </button>\r\n\r\n  <p class=\"title\">{{ myTitle }}</p>\r\n\r\n  <button\r\n    mat-icon-button\r\n    [matMenuTriggerFor]=\"menu\"\r\n    class=\"menu\"\r\n    aria-label=\"Example icon-button with a menu\"\r\n    >\r\n    <mat-icon>menu</mat-icon>\r\n  </button>\r\n</mat-toolbar>\r\n<!-- Mat menu-->\r\n<div class=\"mat-menu-container\" >\r\n<mat-menu #menu=\"matMenu\" >\r\n  <button\r\n    mat-menu-item\r\n    *ngIf=\"!userIsAuthenticated\"\r\n    routerLink=\"/signup\"\r\n    routerLinkActive=\"mat-accent\"\r\n  >\r\n    <mat-icon>dialpad</mat-icon>\r\n    <span>Signup Autore</span>\r\n  </button>\r\n  <button\r\n    mat-menu-item\r\n    *ngIf=\"!userIsAuthenticated\"\r\n    routerLink=\"/login\"\r\n    routerLinkActive=\"mat-accent\"\r\n  >\r\n    <mat-icon>login</mat-icon>\r\n    <span>Login Autore</span>\r\n  </button>\r\n  <button\r\n    mat-menu-item\r\n    *ngIf=\"userIsAuthenticated\"\r\n    (click)=\"navigateToAutore()\"\r\n  >\r\n    <mat-icon>assignment</mat-icon>\r\n    <span>Menu' Autore</span>\r\n  </button>\r\n  <button mat-menu-item *ngIf=\"userIsAuthenticated\" (click)=\"navigateToHome()\">\r\n    <mat-icon>videogame_asset</mat-icon>\r\n    <span>Menu' Player</span>\r\n  </button>\r\n  <button mat-menu-item *ngIf=\"userIsAuthenticated\" (click)=\"onLogout()\">\r\n    <mat-icon>exit_to_app</mat-icon>\r\n    <span>Logout</span>\r\n  </button>\r\n</mat-menu>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Storia } from 'src/app/interfaces/storia';\r\nimport { DummyApiService } from 'src/app/services/dummy-api.service';\r\nimport { mimeType } from '../mime-type.validator';\r\n\r\n@Component({\r\n  selector: 'app-modifica',\r\n  templateUrl: './modifica.component.html',\r\n  styleUrls: ['./modifica.component.scss']\r\n})\r\nexport class ModificaComponent implements OnInit {\r\n  @Input('id') id: number;\r\n  @Input('title') title: string;\r\n  @Input('sfondo') sfondo: string;\r\n  form: FormGroup;\r\n  imagePreview: string=\"\";\r\n\r\n  constructor(private api: DummyApiService, private router: Router) { }\r\n\r\n  //Trasforma il file immagine in base64, dopo di che lo passiamo a un servizio che lo porta in un server online, e ci restiruisce il link\r\n  onImagePicked(event: Event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({ image: file });\r\n    this.form.get('image').updateValueAndValidity();\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imagePreview = reader.result as string;\r\n      let base64 = this.imagePreview.split('base64')\r\n      this.api.uploadImage(base64[1]).subscribe((res) => {\r\n        this.imagePreview = res.data.link\r\n        this.sfondo = this.imagePreview\r\n        console.log(this.sfondo);\r\n      })\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      image: new FormControl(null, {\r\n        validators: [Validators.required],\r\n        asyncValidators: [mimeType]\r\n\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container-input\">\r\n  <p>Id:</p>\r\n  <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\" [(ngModel)]=\"id\" />\r\n</div>\r\n<div class=\"container-input\">\r\n  <p>Titolo:</p>\r\n  <input\r\n    type=\"text\"\r\n    class=\"form-control\"\r\n    id=\"title\"\r\n    name=\"title\"\r\n    [(ngModel)]=\"title\"\r\n  />\r\n</div>\r\n<div class=\"container-input\">\r\n  <p>Immagine copertina:</p>\r\n  <input\r\n    type=\"text\"\r\n    placeholder=\"Copia il link dal web o carica dal pc\"\r\n    class=\"form-control\"\r\n    id=\"sfondo\"\r\n    name=\"sfondo\"\r\n    [(ngModel)]=\"sfondo\"\r\n  />\r\n</div>\r\n<div>\r\n  <button mat-stroked-button type=\"button\" (click)=\"filePicker.click()\">\r\n    Pick Image\r\n  </button>\r\n\r\n  <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\" />\r\n</div>\r\n<div\r\n  class=\"image-preview\"\r\n  *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\"\r\n>\r\n  <img [src]=\"imagePreview\" [alt]=\"form.value.title\" />\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Injectable, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { interval } from 'rxjs';\r\nimport { startWith, switchMap } from 'rxjs/operators';\r\nimport { Step, Storia } from 'src/app/interfaces/storia';\r\nimport { DummyApiService } from 'src/app/services/dummy-api.service';\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { DeviceDetectorService } from 'ngx-device-detector';\r\nimport * as _ from 'lodash';\r\n@Component({\r\n  selector: 'app-visualizza',\r\n  templateUrl: './visualizza.component.html',\r\n  styleUrls: ['./visualizza.component.scss']\r\n})\r\n\r\n@Injectable()\r\nexport class VisualizzaComponent implements OnInit {\r\n\r\n  id: number;\r\n  title = \"\";\r\n  urlIconaPrincip: string = \"\";\r\n  didascalia: string = \"\";\r\n  startText: string = \"\";\r\n  steps: Step[] = [];\r\n  currentStepId = -1;\r\n  nextStepId = -1;\r\n  storia: Storia;\r\n\r\n  currentStep;\r\n\r\n  hoDatoOk = false;\r\n  hoProcedutoIo = false;\r\n  variabileOk = 0;\r\n  numeroPlayers = 0\r\n  arrayPlayers = [];\r\n\r\n  stop: boolean = false;\r\n\r\n  tempRisposta: string = \"\"\r\n  idPartita = -1;\r\n\r\n  punteggio = 0;\r\n  tempPunteggio: number;\r\n  tempTimer: any;\r\n  timestampGlobale: number = Date.now();\r\n  stepStartAt: number;\r\n\r\n  okClassifica=false\r\n  idClasse:number;\r\n\r\n  constructor(private device :DeviceDetectorService,private activeRoute: ActivatedRoute, private apiDb: DummyApiService, private router: Router) { }\r\n\r\n\r\n\r\n  randomize(el){\r\n    return _.shuffle(el)\r\n  }\r\n  //Metodo refresh della storia tramite get del servizio dummyApi.\r\n  //Questo metodo ha la funzione di rimanere in ascolto di eventuali modifiche lato database e permette ai players di visualizzare gli avanzamenti di squadra.\r\n  refresh() {\r\n    this.apiDb.getStoria(this.id).subscribe(\r\n      (singleStory) => {\r\n        this.storia = this.apiDb.reMap(singleStory);\r\n        this.steps = this.storia.steps\r\n        this.apiDb.getStep(this.id).subscribe((singleStory)=>{\r\n          let str = this.apiDb.reMap(singleStory);\r\n          str.steps.forEach(element => {\r\n            if (element.activityId==this.currentStepId) {\r\n              this.currentStep = element\r\n            }\r\n          });\r\n        })\r\n        console.log(\"la mia storia è\" + JSON.stringify(this.storia))\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    // let info = this.device.getDeviceInfo()\r\n    // console.log(info)\r\n    this.stepStartAt = Date.now()\r\n    this.resetStepTimer();\r\n\r\n    if (this.activeRoute.snapshot.params.partita) {\r\n      this.idPartita = this.activeRoute.snapshot.params.partita;\r\n    }\r\n\r\n    //Quando la partita è in modalità gruppo o classe, attraverso la tecnica del polling vengono agiornati dati interrogando il server ogni secondo (1000 millisecondi)\r\n    if (this.idPartita != -1) {\r\n      interval(1000) // run every 1000 millisecond\r\n        .pipe(\r\n          startWith(0),\r\n          switchMap((res, i) => {\r\n            return this.apiDb.getGame(this.idPartita)\r\n          })\r\n        )\r\n        .subscribe(\r\n          res => {\r\n\r\n            if (!res) return;\r\n            this.idClasse = res.idClasse\r\n            this.numeroPlayers = res.numeroPlayer\r\n            this.arrayPlayers = this.array(res.numeroPlayer)\r\n            this.variabileOk = res.variabileOk\r\n            this.punteggio = res.score\r\n\r\n            //Se lo step corrente cambia a database a seguito di un update da parte di altro player, il giocatore modifica in locale i dati aggiornati\r\n            if (this.currentStepId != res.currentStepId) {\r\n              this.currentStepId = res.currentStepId\r\n              this.apiDb.getStep(this.id).subscribe((singleStory)=>{\r\n                let str = this.apiDb.reMap(singleStory);\r\n                str.steps.forEach(element => {\r\n                  if (element.activityId==this.currentStepId) {\r\n                    this.currentStep = element\r\n                  }\r\n                });\r\n              })\r\n              this.nextStepId = res.nextStepId\r\n              this.hoDatoOk = false\r\n              this.hoProcedutoIo = false\r\n              this.stop = false\r\n              return;\r\n            }\r\n\r\n            //Nel caso in cui uno dei compagni ha fornito una risposta prima di me ottengo da database punteggio e prossimo step,\r\n            //mi metto in attesa degli altri player attraverso la variabile locale hoDatoOk\r\n            if (this.nextStepId != res.nextStepId && this.hoDatoOk == false && this.hoProcedutoIo == false && this.stop == false) {\r\n              this.stop = true\r\n              // alert('compagno andato avanti! vuoi andare avanti anche tu?')\r\n              this.apiDb.updateGame(this.idPartita, res.nextStepId, this.punteggio).subscribe((risp: any) => {\r\n                console.log(risp);\r\n                this.hoDatoOk = true\r\n                this.nextStepId = risp.result.nextStepId\r\n                this.stop = false\r\n              })\r\n              return;\r\n            }\r\n\r\n            // if (this.hoProcedutoIo == true && this.nextStepId == res.nextStepId && this.hoDatoOk == true && this.stop == true) {\r\n            //   var timeS = Date.now();\r\n            //   this.stop = false\r\n            //   return;\r\n            // }\r\n\r\n            //Se tutti i player hanno dato Ok allora il visualizza carica localmente anche id dello step corrente\r\n            if (res.numeroPlayer == res.variabileOk && this.stop == false) {\r\n\r\n              this.stop = true\r\n              this.apiDb.updateGame(this.idPartita, res.nextStepId, this.punteggio).subscribe((risp: any) => {\r\n                this.currentStepId = risp.result.currentStepId\r\n                this.apiDb.getStep(this.id).subscribe((singleStory)=>{\r\n                  let str = this.apiDb.reMap(singleStory);\r\n                  str.steps.forEach(element => {\r\n                    if (element.activityId==this.currentStepId) {\r\n                      this.currentStep = element\r\n                    }\r\n                  });\r\n                })\r\n                this.nextStepId = risp.result.nextStepId\r\n                this.hoDatoOk = false\r\n                this.hoProcedutoIo = false\r\n                this.stop = false\r\n              });\r\n              this.refresh();\r\n              return;\r\n            }\r\n\r\n          },\r\n          error => { }\r\n        );\r\n    }\r\n\r\n    this.id = this.activeRoute.snapshot.params.id;\r\n    this.refresh()\r\n  }\r\n\r\n  //Metodo che gestisce l' inizia partita dallo step zero\r\n  iniziaStep() {\r\n    if (this.idPartita == -1) {\r\n      this.currentStepId = 0\r\n      this.apiDb.getStep(this.id).subscribe((singleStory)=>{\r\n        let str = this.apiDb.reMap(singleStory);\r\n        str.steps.forEach(element => {\r\n          if (element.activityId==this.currentStepId) {\r\n            this.currentStep = element\r\n          }\r\n        });\r\n      })\r\n    } else {\r\n      this.stop = true\r\n      this.hoProcedutoIo = true\r\n      this.hoDatoOk = true\r\n\r\n      this.notificaAvanzamento(0)\r\n    }\r\n  }\r\n\r\n  //Metodo utilizzato solamente in tipologia step 'fine' che permette di essere reindirizzati verso la classifica dei punteggi ottenuti.\r\n  fine() {\r\n    this.router.navigateByUrl(\"classifica\")\r\n  }\r\n\r\n  //Metodo di update dell' id del prossimo step su database.\r\n  //Questo metodo viene utilizzato dal gestisciAvanzamento() che si occupa di individuare l' id dell prossimo Step.\r\n  notificaAvanzamento(nextStepId: number) {\r\n    this.apiDb.updateGame(this.idPartita, nextStepId, this.punteggio).subscribe();\r\n    this.nextStepId = nextStepId;\r\n  }\r\n\r\n  //Metodo impiegato per calcolare il punteggio.\r\n  //Lo score assegnato è in forma di bonus in caso di risposta corretta, in forma di malus in caso di risposta sbagliata. Nel caso di squadra vale come risposta quella del primo player a risponderee/o completare puzzle/dnd\r\n  //Bonus e malus sono resi proporzionali al timer: quanto più veloce a rispondere correttamente, quanto meno veloce a rispondere scorrettamente.\r\n  gestisciPunteggio(timer: number) {\r\n    if (timer == NaN || timer == undefined || timer == null) return\r\n    // if (this.currentStepId == 0) return 0;\r\n    if (this.currentStep.action == \"informazione\") return 0;\r\n    if (this.nextStepId == this.currentStep.correctId) return Math.round(500 / timer);\r\n    if (this.nextStepId == this.currentStep.wrongId) return -Math.round(timer / 50);\r\n  }\r\n\r\n  //Metodo che restituisce l' intervallo tra inizio e fine step in secondi (/1000)\r\n  resetStepTimer() {\r\n    let oldTimer = this.stepStartAt;\r\n    this.stepStartAt = Date.now()\r\n    return (this.stepStartAt - oldTimer) / 1000\r\n  }\r\n\r\n  //Metodo che restituisce un array di dimensione data, impiegato nel nostro caso per costituire un array di player in base a quanto selezionato dallo user\r\n  array(length) {\r\n    return Array(length)\r\n  }\r\n\r\n  //Metodo di valutazione della risposta forita dall' utente.\r\n  //Questo metodo valuta nel primo if se la risposta fornita dall' utente è di tipo \"purchessia(presenza/assenza)\", nel nostro caso contrassegnata con 'right'\r\n  //Secondo if effetua un controllo sulla presenza o meno della risposta in una lista di valori\r\n  valutaDomanda(): boolean {\r\n    if (this.currentStep.tipoDomanda == 'right') {\r\n      return true\r\n    }\r\n    if (this.currentStep.tipoDomanda == 'array') {\r\n      for (let i = 0; i < this.currentStep.risposteDomanda.length; i++) {\r\n        if (this.tempRisposta.toLowerCase() == this.currentStep.risposteDomanda[i].toLowerCase()) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  //Metodo di gestione avanzamento agli step della storia differenziata a seconda della modalita (singolo o altro), tipologia (informazione, puzzle, domanda, ecc.)\r\n  //Il metodo inoltre abbina alla gestione degli id anche la gestione del timer e del punteggio\r\n  gestisciAvanzamento(idQuiz) {\r\n    // assegnare il punteggio\r\n    console.log(\"step corrente: \" + this.currentStepId)\r\n    if (this.currentStepId == -1) return\r\n\r\n    if (this.currentStep.action == \"informazione\" || this.currentStep.action == \"puzzle\" || this.currentStep.action == \"dnd\") {\r\n      //Avanzamento in gioco modalità singolo\r\n      if (this.idPartita == -1) {\r\n        this.nextStepId = this.currentStep.correctId\r\n        var tempoImpiegato = this.resetStepTimer();\r\n        console.log(\"impiegati \" + tempoImpiegato + \" secondi.\");\r\n        this.punteggio = this.punteggio + this.gestisciPunteggio(tempoImpiegato);\r\n        this.currentStepId = this.currentStep.correctId\r\n\r\n        this.apiDb.getStep(this.id).subscribe((singleStory)=>{\r\n          let str = this.apiDb.reMap(singleStory);\r\n          str.steps.forEach(element => {\r\n            if (element.activityId==this.currentStepId) {\r\n              this.currentStep = element\r\n            }\r\n          });\r\n        })\r\n      } else {\r\n        //Avanzamento gioco in modalità squadre\r\n        console.log(\"sto per far diventare lo step corrente \" + this.currentStep.correctId)\r\n        this.nextStepId = this.currentStep.correctId;\r\n        this.stop = true\r\n        this.hoProcedutoIo = true\r\n        this.hoDatoOk = true\r\n        var tempoImpiegato = this.resetStepTimer();\r\n        console.log(\"impiegati \" + tempoImpiegato + \" secondi.\");\r\n        this.punteggio = this.punteggio + this.gestisciPunteggio(tempoImpiegato);\r\n        this.notificaAvanzamento(this.nextStepId)\r\n      }\r\n\r\n      return;\r\n    }\r\n    if (this.currentStep.action == \"domanda\" || this.currentStep.action == \"quiz\") {\r\n\r\n      if (this.currentStep.action == \"domanda\") {\r\n        console.log(\"sto confrontando questo :\" + this.tempRisposta)\r\n        console.log(\"con questo  :\" + this.currentStep.risposteDomanda)\r\n\r\n        if (this.valutaDomanda()) {\r\n          alert(\"hai dato la risposta corretta\")\r\n          //Avanzamento in gioco modalità singolo)\r\n          if (this.idPartita == -1) {\r\n            this.nextStepId = this.currentStep.correctId\r\n            var tempoImpiegato = this.resetStepTimer();\r\n            console.log(\"impiegati \" + tempoImpiegato + \" secondi.\");\r\n            this.punteggio = this.punteggio + this.gestisciPunteggio(tempoImpiegato);\r\n            this.currentStepId = this.currentStep.correctId\r\n            this.apiDb.getStep(this.id).subscribe((singleStory)=>{\r\n              let str = this.apiDb.reMap(singleStory);\r\n              str.steps.forEach(element => {\r\n                if (element.activityId==this.currentStepId) {\r\n                  this.currentStep = element\r\n                }\r\n              });\r\n            })\r\n          } else {\r\n            //Avanzamento gioco in modalità squadre\r\n            console.log(\"sto per far diventare lo step corrente \" + this.currentStep.correctId)\r\n            this.nextStepId = this.currentStep.correctId;\r\n            this.stop = true\r\n            this.hoProcedutoIo = true\r\n            this.hoDatoOk = true\r\n            var tempoImpiegato = this.resetStepTimer();\r\n            console.log(\"impiegati \" + tempoImpiegato + \" secondi.\");\r\n            this.punteggio = this.punteggio + this.gestisciPunteggio(tempoImpiegato);\r\n            this.notificaAvanzamento(this.nextStepId)\r\n          }\r\n\r\n        } else {\r\n          alert(\"hai dato la risposta sbagliata\")\r\n          //Avanzamento gioco in modalità individuale\r\n          if (this.idPartita == -1) {\r\n            this.nextStepId = this.currentStep.wrongId\r\n            var tempoImpiegato = this.resetStepTimer();\r\n            console.log(\"impiegati \" + tempoImpiegato + \" secondi.\");\r\n            this.punteggio = this.punteggio + this.gestisciPunteggio(tempoImpiegato);\r\n            this.currentStepId = this.currentStep.wrongId\r\n            this.apiDb.getStep(this.id).subscribe((singleStory)=>{\r\n              let str = this.apiDb.reMap(singleStory);\r\n              str.steps.forEach(element => {\r\n                if (element.activityId==this.currentStepId) {\r\n                  this.currentStep = element\r\n                }\r\n              });\r\n            })\r\n          } else {\r\n            //Avanzamento gioco in modalità squadre\r\n            console.log(\"sto per far diventare lo step corrente \" + this.currentStep.wrongId)\r\n            this.nextStepId = this.currentStep.wrongId;\r\n            this.stop = true\r\n            this.hoProcedutoIo = true\r\n            this.hoDatoOk = true\r\n            var tempoImpiegato = this.resetStepTimer();\r\n            console.log(\"impiegati \" + tempoImpiegato + \" secondi.\");\r\n            this.punteggio = this.punteggio + this.gestisciPunteggio(tempoImpiegato);\r\n            this.notificaAvanzamento(this.nextStepId)\r\n          }\r\n        }\r\n\r\n        this.tempRisposta = \"\"\r\n      }\r\n      if (this.currentStep.action == \"quiz\") {\r\n        let correctQuizResp = this.currentStep.quizCorrectIdx\r\n\r\n        if (idQuiz == correctQuizResp) {\r\n          //Avanzamento gioco in modalità individuale\r\n          if (this.idPartita == -1) {\r\n            this.nextStepId = this.currentStep.correctId\r\n            var tempoImpiegato = this.resetStepTimer();\r\n            console.log(\"impiegati \" + tempoImpiegato + \" secondi.\");\r\n            this.punteggio = this.punteggio + this.gestisciPunteggio(tempoImpiegato);\r\n            this.currentStepId = this.currentStep.correctId\r\n            this.apiDb.getStep(this.id).subscribe((singleStory)=>{\r\n              let str = this.apiDb.reMap(singleStory);\r\n              str.steps.forEach(element => {\r\n                if (element.activityId==this.currentStepId) {\r\n                  this.currentStep = element\r\n                }\r\n              });\r\n            })\r\n          } else {\r\n            //Avanzamento gioco in modalità squadre\r\n            console.log(\"sto per far diventare lo step corrente \" + this.currentStep.correctId)\r\n            this.nextStepId = this.currentStep.correctId;\r\n            this.stop = true\r\n            this.hoProcedutoIo = true\r\n            this.hoDatoOk = true\r\n            var tempoImpiegato = this.resetStepTimer();\r\n            console.log(\"impiegati \" + tempoImpiegato + \" secondi.\");\r\n            this.punteggio = this.punteggio + this.gestisciPunteggio(tempoImpiegato);\r\n            this.notificaAvanzamento(this.nextStepId)\r\n          }\r\n        } else {\r\n          //Avanzamento gioco in modalità individuale\r\n          if (this.idPartita == -1) {\r\n            this.nextStepId = this.currentStep.wrongId\r\n            var tempoImpiegato = this.resetStepTimer();\r\n            console.log(\"impiegati \" + tempoImpiegato + \" secondi.\");\r\n            this.punteggio = this.punteggio + this.gestisciPunteggio(tempoImpiegato);\r\n            this.currentStepId = this.currentStep.wrongId\r\n            this.apiDb.getStep(this.id).subscribe((singleStory)=>{\r\n              let str = this.apiDb.reMap(singleStory);\r\n              str.steps.forEach(element => {\r\n                if (element.activityId==this.currentStepId) {\r\n                  this.currentStep = element\r\n                }\r\n              });\r\n            })\r\n          } else {\r\n            //Avanzamento gioco in modalità squadre\r\n            console.log(\"sto per far diventare lo step corrente \" + this.currentStep.wrongId)\r\n            this.nextStepId = this.currentStep.wrongId;\r\n            this.stop = true\r\n            this.hoProcedutoIo = true\r\n            this.hoDatoOk = true\r\n            var tempoImpiegato = this.resetStepTimer();\r\n            console.log(\"impiegati \" + tempoImpiegato + \" secondi.\");\r\n            this.punteggio = this.punteggio + this.gestisciPunteggio(tempoImpiegato);\r\n            this.notificaAvanzamento(this.nextStepId)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return;\r\n  }\r\n}\r\n","<app-header [my-title]=\"'Visualizza'\"> </app-header>\r\n\r\n<section id=\"mainSection\" *ngIf=\"this.storia\">\r\n  <div class=\"mainContainer\" *ngIf=\"this.currentStepId < 0\">\r\n    <div class=\"copertina\">\r\n      <div class=\"storyTitle\">\r\n        {{ this.storia.nome }}\r\n      </div>\r\n      <img class=\"imgCopertina\" [src]=\"this.storia.urlBackground\" />\r\n      <div class=\"button-container\">\r\n        <button *ngIf=\"this.currentStepId < 0\" mat-raised-button color=\"link\" (click)=\"iniziaStep()\" [disabled]=\"hoDatoOk || hoProcedutoIo\">\r\n          {{ startText ? startText : \"Inizia\" }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <h1>\r\n    {{ title }}\r\n  </h1>\r\n  <h2>\r\n    {{ didascalia }}\r\n  </h2>\r\n\r\n  <section *ngIf=\"this.currentStep\">\r\n    <div *ngIf=\"this.currentStepId != -1\">\r\n      <!-- Inizio attività quiz-->\r\n      <div\r\n        *ngIf=\"this.currentStep.action == 'quiz'\"\r\n        class=\"mainContainer\"\r\n      >\r\n        <mat-card>\r\n          <div class=\"header-matcard\">\r\n            <div class=\"container-player\">\r\n\r\n            </div>\r\n            <div class=\"punteggio\">\r\n              <p>Punteggio : {{ this.punteggio }}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"typing-text\">\r\n            <p>{{ this.currentStep.activityTitle }}</p>\r\n          </div>\r\n          <div class=\"backImage\">\r\n            <img class=\"img-responsive\" *ngIf=\"this.currentStep.backImg != ''\" [src]=\"this.currentStep.backImg\" />\r\n          </div>\r\n          <mat-card-content>\r\n            <ng-container *ngIf=\"\r\n                this.currentStep.answers &&\r\n                this.currentStep.answers.length > 0\r\n              \">\r\n              <mat-list role=\"list\" *ngFor=\"\r\n                  let answ of this.currentStep.answers;\r\n                  let i = index\r\n                \" (click)=\"gestisciAvanzamento(i)\">\r\n                <button mat-raised-button color=\"accent\" role=\"listitem\" [disabled]=\"hoDatoOk || hoProcedutoIo\">\r\n                  <p>{{ answ }}</p>\r\n                </button>\r\n              </mat-list>\r\n            </ng-container>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n      <!-- end QUIZ -->\r\n\r\n      <!-- Inizio attività puzzle-->\r\n      <div\r\n        *ngIf=\"this.currentStep.action == 'puzzle'\"\r\n        class=\"mainContainer\"\r\n        #myIdentifier\r\n      >\r\n        <mat-card>\r\n          <div class=\"header-matcard\">\r\n\r\n            <div class=\"punteggio\">\r\n              <p>Punteggio : {{ this.punteggio }}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"typing-text\">\r\n            <p>{{ this.currentStep.activityTitle }}</p>\r\n          </div>\r\n          <app-puzzle [difficulty]=\"this.currentStep.difficulty\" [puzzleUrl]=\"this.currentStep.puzzleImg\">\r\n          </app-puzzle>\r\n        </mat-card>\r\n      </div>\r\n      <!-- end PUZZLE -->\r\n\r\n      <!-- Inizio attività dnd-->\r\n      <div\r\n        *ngIf=\"this.currentStep.action == 'dnd'\"\r\n        class=\"mainContainer\"\r\n      >\r\n        <mat-card>\r\n          <div class=\"header-matcard\">\r\n\r\n            <div class=\"punteggio\">\r\n              <p>Punteggio : {{ this.punteggio }}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"typing-text\">\r\n            <p>{{ this.currentStep.activityTitle }}</p>\r\n          </div>\r\n          <div class=\"backImage\">\r\n            <img class=\"img-responsive\" *ngIf=\"this.currentStep.backImg != ''\" [src]=\"this.currentStep.backImg\" />\r\n          </div>\r\n          <app-dragndrop [order]=\"this.currentStep.order\"></app-dragndrop>\r\n        </mat-card>\r\n      </div>\r\n      <!-- end DnD-->\r\n\r\n      <!-- Inizio attività domanda-->\r\n      <div\r\n        *ngIf=\"this.currentStep.action == 'domanda'\"\r\n        class=\"mainContainer\"\r\n      >\r\n        <mat-card>\r\n          <div class=\"header-matcard\">\r\n\r\n            <div class=\"punteggio\">\r\n              <p>Punteggio : {{ this.punteggio }}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"typing-text\">\r\n            <p>{{ this.currentStep.activityTitle }}</p>\r\n          </div>\r\n          <div class=\"backImage\">\r\n            <img class=\"img-responsive\" *ngIf=\"this.currentStep.backImg != ''\" [src]=\"this.currentStep.backImg\" />\r\n          </div>\r\n          <mat-card-content>\r\n            <div class=\"input-container\">\r\n              <input [(ngModel)]=\"tempRisposta\" class=\"form-control\" type=\"text\"\r\n                placeholder=\"Inserisci qui la risposta \" />\r\n            </div>\r\n            <div class=\"container-btn-avanti\">\r\n              <button mat-mini-fab class=\"btn-avanti\" (click)=\"gestisciAvanzamento()\" [disabled]=\"hoDatoOk || hoProcedutoIo\">\r\n                <i class=\"material-icons\">play_arrow</i>\r\n              </button>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n      <!-- end domanda-->\r\n\r\n      <!-- Inizio attività informazione-->\r\n      <div\r\n        *ngIf=\"this.currentStep.action == 'informazione'\"\r\n        class=\"mainContainer\"\r\n      >\r\n        <mat-card>\r\n          <div class=\"header-matcard\">\r\n\r\n            <div class=\"punteggio\">\r\n              <p>Punteggio : {{ this.punteggio }}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"backImage\">\r\n            <img class=\"img-responsive\" *ngIf=\"this.currentStep.backImg != ''\" [src]=\"this.currentStep.backImg\" />\r\n          </div>\r\n          <mat-card-content>\r\n            <div class=\"typing-text\">\r\n              <p>{{ this.currentStep.activityTitle }}</p>\r\n            </div>\r\n          </mat-card-content>\r\n\r\n          <div class=\"container-btn-avanti\">\r\n            <button mat-mini-fab class=\"btn-avanti\" (click)=\"gestisciAvanzamento()\" [disabled]=\"hoDatoOk || hoProcedutoIo\">\r\n              <i class=\"material-icons\">play_arrow</i>\r\n            </button>\r\n          </div>\r\n        </mat-card>\r\n      </div>\r\n      <!-- end informazione-->\r\n      <!-- Inizio attività fine-->\r\n      <div\r\n        *ngIf=\"this.currentStep.action == 'fine'\"\r\n        class=\"mainContainer\"\r\n      >\r\n        <mat-card>\r\n          <p class=\"title\">Partita Finita</p>\r\n          <div class=\"typing-text\">\r\n            <p>{{ this.currentStep.activityTitle }}</p>\r\n          </div>\r\n          <div class=\"backImage\">\r\n            <img class=\"img-responsive\" *ngIf=\"this.currentStep.backImg != ''\" [src]=\"this.currentStep.backImg\" />\r\n          </div>\r\n          <mat-card-content>\r\n            <!-- step corrente {{ this.currentStepId }} -->\r\n            <!-- <div class=\"typing-text\">\r\n              <p>{{ this.storia.steps[currentStepId].activityTitle }}</p>\r\n            </div> -->\r\n            <section *ngIf=\"\r\n                this.currentStep.action == 'fine' &&\r\n                idPartita != -1\r\n              \">\r\n              <button mat-raised-button color=\"primary\" (click)=\"this.okClassifica = true\">\r\n                Visualizza classifica\r\n              </button>\r\n            </section>\r\n            <app-classifica *ngIf=\"this.okClassifica\" [idClasse]=\"this.idClasse\"></app-classifica>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n      <!-- end fine-->\r\n    </div>\r\n  </section>\r\n</section>\r\n","import { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DragDrop, Step, Storia } from 'src/app/interfaces/storia';\r\nimport { DummyApiService } from 'src/app/services/dummy-api.service';\r\nimport { mimeType } from '../mime-type.validator';\r\n\r\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  id: number,\r\n  steps:Step[]\r\n}\r\n\r\n@Component({\r\n  selector: 'app-configura',\r\n  templateUrl: './configura.component.html',\r\n  styleUrls: ['./configura.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ConfiguraComponent implements OnInit {\r\n  id: number;\r\n  storia: Storia;\r\n\r\n  tempActivityId = -1;\r\n  tempContenuto = \"\";\r\n  tempRisposteDomanda: string[] = [];\r\n  tempDifficulty = \"\";\r\n  tempImgPuzzle = \"\";\r\n  tempTipoUpload = \"\";\r\n  tempQuizCorrectIdx = -1;\r\n  tempCorrect = 0;\r\n  tempWrong = 0;\r\n  risposteQuiz: any[];\r\n  tempOrder: DragDrop[] = [];\r\n  tempTipoDomanda : string;\r\n\r\n  tempPosArray: number;\r\n\r\n\r\n  tempClickToObject: string = '';\r\n  showConfiguraDomanda: boolean = false;\r\n  showConfiguraClickToObject: boolean = false;\r\n  tempTipologiaAttivita: string = \"\";\r\n  numeroRisposte: number;\r\n  numeroDnd: number = 0;\r\n  imagePreview: string;\r\n  rispostaGiusta: string = \"\";\r\n  flagSalvataggio = false;\r\n\r\n  form: FormGroup;\r\n  constructor(private activeRoute: ActivatedRoute, private api: DummyApiService, private _formBuilder: FormBuilder, private router: Router, public dialog: MatDialog) { }\r\n\r\n\r\n  //Gestisce il testo mostrato nel placeholder\r\n  getTitleTranslation(type) {\r\n    if (type == \"domanda\") {\r\n      return \"domanda\"\r\n    }\r\n    if (type == \"informazione\" || type == \"dnd\" || type == \"fine\") {\r\n      return \"contenuto\"\r\n    }\r\n    if (type == \"puzzle\") {\r\n      return \"messaggio introduttivo\"\r\n    }\r\n\r\n    return \"titolo\"\r\n  }\r\n\r\n// metodo che aggiunge un attività alla storia nel database tramite una push\r\n// dopo aver verificato la tipologia di attività tramite un if\r\n  aggiungiAttivita(type: string, id: number = -1, posArray:number) {\r\n    this.flagSalvataggio = true;\r\n    let proxId:number;\r\n    if(this.storia.steps.length == 0){\r\n      proxId=0\r\n    } else {\r\n      proxId=(this.storia.steps[this.storia.steps.length - 1].activityId + 1)\r\n    }\r\n    console.log(\"Prox id: \"+proxId )\r\n    console.log(\"sono stato chiamato con tipo =\" + type)\r\n    if (type == \"domanda\") {\r\n      let myActivity = {\r\n        action: 'domanda',\r\n        activityId: id == -1 ? proxId : id,\r\n        activityTitle: this.tempContenuto,\r\n        risposteDomanda: this.tempRisposteDomanda,\r\n        tipoDomanda: this.tempTipoDomanda,\r\n        backImg: this.imagePreview,\r\n        correctId: this.tempCorrect,\r\n        wrongId: this.tempWrong\r\n      }\r\n      if (id == -1) {\r\n        this.storia.steps.push(myActivity)\r\n      } else {\r\n        this.storia.steps[posArray] = myActivity\r\n      }\r\n    }\r\n    console.log(\"storia aggiornata: \" + this.storia);\r\n    if (type == \"quiz\") {\r\n      let myActivity = {\r\n        action: 'quiz',\r\n        activityId: id == -1 ? proxId : id,\r\n        activityTitle: this.tempContenuto,\r\n        backImg: this.imagePreview,\r\n        correctId: this.tempCorrect,\r\n        wrongId: this.tempWrong,\r\n        answers: this.risposteQuiz,\r\n        quizCorrectIdx: this.tempQuizCorrectIdx.valueOf()\r\n      }\r\n      if (id == -1) {\r\n        this.storia.steps.push(myActivity)\r\n      } else {\r\n        this.storia.steps[posArray] = myActivity\r\n      }\r\n    }\r\n    if (type == \"informazione\") {\r\n      let myActivity = {\r\n        action: 'informazione',\r\n        activityId: id == -1 ? proxId : id,\r\n        activityTitle: this.tempContenuto,\r\n        backImg: this.imagePreview,\r\n        correctId: this.tempCorrect,\r\n        wrongId: this.tempWrong\r\n      }\r\n      if (id == -1) {\r\n        this.storia.steps.push(myActivity)\r\n      } else {\r\n        this.storia.steps[posArray] = myActivity\r\n      }\r\n    }\r\n    if (type == \"fine\") {\r\n      let myActivity = {\r\n        action: 'fine',\r\n        activityId: id == -1 ? proxId : id,\r\n        activityTitle: this.tempContenuto,\r\n        backImg: this.imagePreview,\r\n        correctId: this.tempCorrect,\r\n        wrongId: this.tempWrong\r\n      }\r\n      if (id == -1) {\r\n        this.storia.steps.push(myActivity)\r\n      } else {\r\n        this.storia.steps[posArray] = myActivity\r\n      }\r\n    }\r\n    if (type == \"puzzle\") {\r\n      let myActivity = {\r\n        action: 'puzzle',\r\n        activityId: id == -1 ? proxId : id,\r\n        activityTitle: this.tempContenuto,\r\n        puzzleImg: this.tempImgPuzzle,\r\n        difficulty: this.tempDifficulty,\r\n        correctId: this.tempCorrect,\r\n        wrongId: this.tempWrong\r\n      }\r\n      if (id == -1) {\r\n        this.storia.steps.push(myActivity)\r\n      } else {\r\n        this.storia.steps[posArray] = myActivity\r\n      }\r\n    }\r\n    if (type == \"dnd\") {\r\n      let myActivity = {\r\n        action: 'dnd',\r\n        activityId: id == -1 ? proxId : id,\r\n        activityTitle: this.tempContenuto,\r\n        backImg: this.imagePreview,\r\n        order: this.tempOrder,\r\n        correctId: this.tempCorrect,\r\n        wrongId: this.tempWrong\r\n      }\r\n      if (id == -1) {\r\n        this.storia.steps.push(myActivity)\r\n      } else {\r\n        this.storia.steps[posArray] = myActivity\r\n      }\r\n    }\r\n    this.resettaForm()\r\n  }\r\n\r\n  //metodo utilizzato per generare le risposte possibili di un quiz\r\n  aggiornaRisposteQuiz() {\r\n    this.risposteQuiz = [];\r\n    for (let i = 0; i < this.numeroRisposte; i++) {\r\n      this.risposteQuiz[i] = \"\";\r\n    }\r\n  }\r\n\r\n  //per aggiornare l'ordine del dnd\r\n  aggiornaOrder() {\r\n    this.tempOrder.push(\r\n      {\r\n        posizione: this.numeroDnd,\r\n        desc: \"\"\r\n      })\r\n    this.numeroDnd++;\r\n  }\r\n//per aggiorare array risposte possibili in domanda\r\n  aggiornaTempRisposta() {\r\n    this.tempRisposteDomanda.push(\"\")\r\n  }\r\n\r\n//metodo per modificare un attività\r\n  editAttivita(attivita: Step, posArray:number) {\r\n    this.resettaForm()\r\n    this.tempPosArray = posArray;\r\n    console.log('edito:' +attivita.activityId+\" \"+attivita.activityTitle);\r\n\r\n    //generale\r\n    this.tempContenuto = attivita.activityTitle;\r\n    this.tempTipologiaAttivita = attivita.action;\r\n    this.tempCorrect = attivita.correctId;\r\n    this.tempWrong = attivita.wrongId;\r\n    this.tempActivityId = attivita.activityId;\r\n    this.imagePreview = attivita.backImg;\r\n\r\n\r\n    console.log(\"corretto = \" + this.tempCorrect + \" sbagliato = \" + this.tempWrong);\r\n\r\n    //specifica\r\n    if (attivita.action == \"domanda\") {\r\n      this.tempTipoDomanda = attivita.tipoDomanda\r\n      this.tempRisposteDomanda = attivita.risposteDomanda;\r\n    }\r\n    if (attivita.action == \"quiz\") {\r\n      this.risposteQuiz = attivita.answers\r\n      this.tempQuizCorrectIdx=attivita.quizCorrectIdx;\r\n    }\r\n    if (attivita.action == \"puzzle\") {\r\n      if (attivita.puzzleImg.charAt(0) == 'd') {\r\n        this.tempTipoUpload = \"locale\"\r\n      } else if (attivita.puzzleImg.charAt(0) == 'w' || attivita.puzzleImg.charAt(0) == 'h') {\r\n        this.tempTipoUpload = \"web\"\r\n      }\r\n      this.tempDifficulty = attivita.difficulty;\r\n      this.tempImgPuzzle = attivita.puzzleImg;\r\n    }\r\n    if (attivita.action == \"dnd\") {\r\n      this.tempOrder = attivita.order;\r\n    }\r\n  }\r\n\r\n  // eliminaAttivita(activityId: number): void {\r\n  //   this.storia.steps.splice(activityId, 1);\r\n  //   this.flagSalvataggio = true;\r\n  // }\r\n\r\n\r\n\r\n//metodo per salvare attivià che ha subito una modifica\r\n  onSaveActivity() {\r\n    this.aggiungiAttivita(this.tempTipologiaAttivita, this.tempActivityId, this.tempPosArray)\r\n    this.resettaForm();\r\n    this.tempActivityId = -1\r\n  }\r\n\r\n\r\n//metodo per caricare la storia tramite update\r\n  onSaveStory() {\r\n    this.api.updateStoria(\r\n      this.storia\r\n    ).subscribe(response => {\r\n      this.router.navigate([\"/configura/\" + this.storia.id]);\r\n    });\r\n    this.flagSalvataggio = false;\r\n    this.resettaForm()\r\n  }\r\n\r\n  //metodo per svuotare il form delle attività\r\n  resettaForm() {\r\n    this.tempContenuto = ''\r\n    this.tempClickToObject = ''\r\n    this.tempActivityId = -1;\r\n    this.tempContenuto = \"\";\r\n    this.tempRisposteDomanda = [];\r\n    this.tempTipoDomanda = \"\";\r\n    this.tempDifficulty = \"\";\r\n    this.tempImgPuzzle = \"\";\r\n    this.tempTipoUpload = \"\";\r\n    this.tempQuizCorrectIdx = -1;\r\n    this.tempCorrect = 0;\r\n    this.tempWrong = 0;\r\n    this.risposteQuiz = [];\r\n    this.tempOrder = [];\r\n    this.tempTipologiaAttivita = \"\";\r\n    this.numeroRisposte = 0;\r\n    this.imagePreview = \"\";\r\n    this.rispostaGiusta = \"\";\r\n    this.tempPosArray = -1;\r\n    this.form.reset()\r\n  }\r\n\r\n  //Trasforma il file immagine in base64, dopo di che lo passiamo a un servizio che lo porta in un server online, e ci restiruisce il link\r\n  onImagePicked(event: Event, type?) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({ image: file });\r\n    this.form.get('image').updateValueAndValidity();\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n\r\n      if (type && type == 'puzzle') {\r\n        this.tempImgPuzzle = reader.result as string;\r\n        let base64 = this.tempImgPuzzle.split('base64')\r\n        this.api.uploadImage(base64[1]).subscribe((res) => {\r\n          this.tempImgPuzzle = res.data.link\r\n        })\r\n      } else {\r\n        this.imagePreview = reader.result as string;\r\n        let base64 = this.imagePreview.split('base64')\r\n        this.api.uploadImage(base64[1]).subscribe((res) => {\r\n          this.imagePreview = res.data.link\r\n        })\r\n\r\n      }\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  //metodo per tenere traccia dell'array del dnd e delle risposte\r\n  trackByFn(index: any, item: any) {\r\n    return index;\r\n  }\r\n  ngOnInit(): void {\r\n    this.id = this.activeRoute.snapshot.params.id;\r\n    this.api.getStoria(this.id).subscribe((singleStory) => {\r\n      this.storia = this.api.reMap(singleStory);\r\n    });\r\n\r\n\r\n    this.form = new FormGroup({\r\n      'tempTipologiaAttivita': new FormControl(null, {\r\n        validators: [Validators.required]\r\n      }),\r\n      'tempContenuto': new FormControl(null, {\r\n        validators: [Validators.required]\r\n      }),\r\n      'tempRisposta': new FormControl(null, {\r\n        validators: [Validators.required]\r\n      }),\r\n      'numeroRisposte': new FormControl(null, {\r\n        validators: [Validators.required]\r\n      }),\r\n      'image': new FormControl(null, {\r\n        validators: [Validators.required],\r\n        asyncValidators: [mimeType]\r\n      }),\r\n      'rispostaGiusta': new FormControl(null, {\r\n        validators: [Validators.required]\r\n      }),\r\n      'tempCorrect': new FormControl(null, {\r\n        validators: [Validators.required]\r\n      }),\r\n      'tempWrong': new FormControl(null, {\r\n        validators: [Validators.required]\r\n      })\r\n\r\n\r\n    });\r\n\r\n  }\r\n\r\n  // metodo per aprire alert in fase di cancellazione di attività\r\n  openDialog(j:number) {\r\n    const dialogRef = this.dialog.open(CancellazioneDialog, {\r\n      data: {\r\n        id:j,\r\n        steps: this.storia.steps,\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      this.flagSalvataggio = true;\r\n      console.log(`Dialog result: ${result}`);\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'cancellazione-dialog',\r\n  templateUrl: 'cancellazione-dialog.html',\r\n})\r\nexport class CancellazioneDialog {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\r\n\r\n\r\n//metodo per eliminare attività tramite splice\r\n  eliminaAttivita(activityId: number): void {\r\n    console.log('cancello: '+activityId);\r\n\r\n    this.data.steps.splice(activityId, 1);\r\n  }\r\n}\r\n\r\n","<app-header [my-title]=\"'Configura'\"> </app-header>\r\n\r\n<!-- **************** -->\r\n<!-- RIEPILOGO STORIA -->\r\n<!-- **************** -->\r\n<mat-card *ngIf=\"storia\" class=\"riepilogo-attivita\">\r\n  <mat-card-header>\r\n    <div *ngIf=\"flagSalvataggio == true\" class=\"salva-button\">\r\n      <button color=\"primary\" mat-raised-button (click)=\"onSaveStory()\">\r\n        Salva storia\r\n      </button>\r\n    </div>\r\n    <mat-card-title\r\n      ><h1 style=\"font-weight: bold\">{{ storia.nome }}</h1>\r\n    </mat-card-title>\r\n    <mat-card-subtitle>\r\n      <img\r\n        class=\"img-responsive\"\r\n        [src]=\"storia.urlBackground\"\r\n        [alt]=\"'  immagine sfondo di  ' + storia.nome\"\r\n        style=\"border: 3px solid\"\r\n      />\r\n    </mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <div *ngFor=\"let act of storia.steps; index as j\">\r\n      <div class=\"header\">\r\n        <!-- row 1 -->\r\n        <div class=\"header-title\">\r\n          <p style=\"font-weight: bold\">\r\n            #{{ j }} Attività n.{{ act.activityId }}\r\n          </p>\r\n          <p>Tipologia: ({{ act.action }})</p>\r\n        </div>\r\n        <div class=\"button-container\">\r\n          <div class=\"button-edit-container\">\r\n            <button (click)=\"editAttivita(act, j)\" mat-mini-fab color=\"primary\">\r\n              <i class=\"material-icons\">edit</i>\r\n            </button>\r\n          </div>\r\n          <div class=\"button-edit-container\">\r\n            <button (click)=\"openDialog(j)\" mat-mini-fab color=\"warn\">\r\n              <i class=\"material-icons\">delete</i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"image-preview\" *ngIf=\"act.backImg != ''\">\r\n        <img [src]=\"act.backImg\" style=\"border: #14144daf 3px solid\" />\r\n      </div>\r\n      <div class=\"noimage-container\" *ngIf=\"act.backImg == ''\">\r\n        Nessuna immagine caricata\r\n      </div>\r\n\r\n      <h3 style=\"font-weight: bold\">Contenuto:</h3>\r\n      <p>{{ act.activityTitle }}</p>\r\n      <!-- ID step domanda-->\r\n      <div *ngIf=\"act.action == 'domanda'\">\r\n        <h3 style=\"font-weight: bold\">Risposta:</h3>\r\n        <p>{{ act.risposteDomanda }}</p>\r\n      </div>\r\n      <!-- Id next step informazione-->\r\n      <div *ngIf=\"act.action == 'informazione'\">\r\n        <h3 style=\"font-weight: bold\">Id prossimo step:</h3>\r\n        <p>{{ act.correctId }}</p>\r\n      </div>\r\n      <!-- ID risposte Quiz-->\r\n      <div class=\"risposte-quiz\" *ngIf=\"act.action == 'quiz'\">\r\n        <h3 style=\"font-weight: bold\">Id Risposta:</h3>\r\n        <p>{{ act.quizCorrectIdx }}</p>\r\n\r\n        <h3 style=\"font-weight: bold\">Id errato:</h3>\r\n        <p>{{ act.wrongId }}</p>\r\n\r\n        <h3 style=\"font-weight: bold\">Id corretto:</h3>\r\n        <p>{{ act.correctId }}</p>\r\n      </div>\r\n\r\n      <p *ngIf=\"!storia.steps || storia.steps.length == 0\">\r\n        Nessuna attività presente\r\n      </p>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n<!-- ****************** -->\r\n<!-- CREAZIONE ATTIVITA -->\r\n<!-- ****************** -->\r\n<mat-card *ngIf=\"storia\" class=\"crea-attivita\">\r\n  <mat-card-title>Aggiungi attività alla tua storia</mat-card-title>\r\n  <form [formGroup]=\"form\" class=\"example-form\">\r\n    <!-- TIPOLOGIA -->\r\n\r\n    <mat-form-field class=\"example-full-width\">\r\n      <mat-label>Tipologia Attività</mat-label>\r\n      <mat-select matNativeControl [(value)]=\"tempTipologiaAttivita\" required>\r\n        <mat-option value=\"informazione\">Testo Informativo</mat-option>\r\n        <mat-option value=\"domanda\">Domanda</mat-option>\r\n        <mat-option value=\"quiz\">Quiz</mat-option>\r\n        <mat-option value=\"puzzle\">Puzzle</mat-option>\r\n        <mat-option value=\"dnd\">Drag&Drop</mat-option>\r\n        <mat-option value=\"fine\">Fine</mat-option>\r\n      </mat-select>\r\n      <mat-error *ngIf=\"form.get('tempTipologiaAttivita').invalid\"\r\n        >Per favore inserisci tipologia</mat-error\r\n      >\r\n    </mat-form-field>\r\n\r\n    <!-- CONTENUTO PER QUALSIASI TIPOLOGIA -->\r\n    <mat-form-field\r\n      *ngIf=\"tempTipologiaAttivita != ''\"\r\n      class=\"example-full-width\"\r\n    >\r\n      <mat-label>\r\n        {{ getTitleTranslation(tempTipologiaAttivita) | titlecase }}</mat-label\r\n      >\r\n      <textarea\r\n        matInput\r\n        type=\"text\"\r\n        formControlName=\"tempContenuto\"\r\n        [(ngModel)]=\"tempContenuto\"\r\n        [placeholder]=\"\r\n          'Inserisci ' + getTitleTranslation(tempTipologiaAttivita)\r\n        \"\r\n      ></textarea>\r\n    </mat-form-field>\r\n    <div *ngIf=\"tempTipologiaAttivita != ''\" class=\"puzzle-preview\">\r\n      <img [src]=\"this.imagePreview\" />\r\n    </div>\r\n\r\n    <!-- TIPOLOGIA : QUIZ | Numero Risposte -->\r\n    <mat-form-field\r\n      *ngIf=\"tempTipologiaAttivita == 'quiz'\"\r\n      class=\"example-full-width\"\r\n    >\r\n      <mat-label>Numero Risposte</mat-label>\r\n      <mat-select\r\n        matNativeControl\r\n        (selectionChange)=\"aggiornaRisposteQuiz()\"\r\n        [(value)]=\"numeroRisposte\"\r\n      >\r\n        <mat-option value=\"2\">2</mat-option>\r\n        <mat-option value=\"3\">3</mat-option>\r\n        <mat-option value=\"4\">4</mat-option>\r\n      </mat-select>\r\n\r\n      <mat-error *ngIf=\"form.get('numeroRisposte').invalid\"\r\n        >Inserisci un numero</mat-error\r\n      >\r\n    </mat-form-field>\r\n\r\n    <!-- TIPOLOGIA : DOMANDA | Risposta Corretta-->\r\n    <section *ngIf=\"tempTipologiaAttivita == 'domanda'\">\r\n      <mat-label>Risposta</mat-label>\r\n      <div class=\"difficulty-levels\">\r\n        <div class=\"input-group\">\r\n          <input\r\n            type=\"radio\"\r\n            [(ngModel)]=\"tempTipoDomanda\"\r\n            name=\"tipoDomanda\"\r\n            id=\"right\"\r\n            value=\"right\"\r\n            checked\r\n            [ngModelOptions]=\"{ standalone: true }\"\r\n          /><label for=\"right\"> right </label>\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <input\r\n            type=\"radio\"\r\n            [(ngModel)]=\"tempTipoDomanda\"\r\n            name=\"tipoDomanda\"\r\n            id=\"array\"\r\n            value=\"array\"\r\n            [ngModelOptions]=\"{ standalone: true }\"\r\n          /><label for=\"array\"> array </label>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"tempTipoDomanda == 'array'\" class=\"example-full-width\">\r\n        <button\r\n          (click)=\"aggiornaTempRisposta()\"\r\n          mat-stroked-button\r\n          color=\"link\"\r\n        >\r\n          Aggiungi elemento\r\n        </button>\r\n        {{ tempRisposteDomanda }}\r\n        <div\r\n          *ngFor=\"\r\n            let item of tempRisposteDomanda;\r\n            let i = index;\r\n            trackBy: trackByFn\r\n          \"\r\n        >\r\n          <div class=\"dnd-table\">\r\n            <input\r\n              [(ngModel)]=\"tempRisposteDomanda[i]\"\r\n              [ngModelOptions]=\"{ standalone: true }\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- TIPOLOGIA Drag&Drop -->\r\n    <div *ngIf=\"tempTipologiaAttivita == 'dnd'\" class=\"example-full-width\">\r\n      <mat-label>Inserisci gli elementi da ordinare</mat-label>\r\n      <button (click)=\"aggiornaOrder()\" mat-stroked-button color=\"link\">\r\n        Aggiungi elemento\r\n      </button>\r\n\r\n      <div *ngFor=\"let item of tempOrder; let i = index; trackBy: trackByFn\">\r\n        <div class=\"dnd-table\">\r\n          <input\r\n            [(ngModel)]=\"tempOrder[i].desc\"\r\n            [ngModelOptions]=\"{ standalone: true }\"\r\n          />\r\n          <input\r\n            [(ngModel)]=\"tempOrder[i].posizione\"\r\n            [ngModelOptions]=\"{ standalone: true }\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- TIPOLOGIA : QUIZ | Array Risposte -->\r\n    <div *ngIf=\"tempTipologiaAttivita == 'quiz'\">\r\n      <mat-radio-group\r\n        [(ngModel)]=\"tempQuizCorrectIdx\"\r\n        [ngModelOptions]=\"{ standalone: true }\"\r\n        ngmodelaria-label=\"Select an option\"\r\n      >\r\n        <div>\r\n          <mat-label>Inserisci le risposte e indica quella corretta</mat-label>\r\n          <div\r\n            *ngFor=\"let item of risposteQuiz; let i = index; trackBy: trackByFn\"\r\n          >\r\n            <div class=\"input-group\">\r\n              <mat-radio-button [value]=\"i\"> </mat-radio-button>\r\n              <input\r\n                style=\"background-color: transparent\"\r\n                [(ngModel)]=\"risposteQuiz[i]\"\r\n                [ngModelOptions]=\"{ standalone: true }\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-radio-group>\r\n    </div>\r\n\r\n    <!-- TIPOLOGIA : PUZZLE -->\r\n    <section *ngIf=\"tempTipologiaAttivita == 'puzzle'\">\r\n      <h3>Immagine per il puzzle</h3>\r\n\r\n      <!-- Risorsa Web o Locale -->\r\n      <div class=\"img-puzzle\">\r\n        <div class=\"difficulty-levels\">\r\n          <div class=\"input-group\">\r\n            <input\r\n              type=\"radio\"\r\n              [(ngModel)]=\"tempTipoUpload\"\r\n              name=\"upload\"\r\n              value=\"web\"\r\n              id=\"web\"\r\n              checked\r\n              [ngModelOptions]=\"{ standalone: true }\"\r\n            /><label for=\"web\">Risorsa Web</label>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <input\r\n              type=\"radio\"\r\n              [(ngModel)]=\"tempTipoUpload\"\r\n              name=\"upload\"\r\n              value=\"locale\"\r\n              id=\"locale\"\r\n              [ngModelOptions]=\"{ standalone: true }\"\r\n            /><label for=\"locale\">File Locale</label>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Se seleziono risorsa web-->\r\n        <div class=\"image-url\" *ngIf=\"tempTipoUpload == 'web'\">\r\n          <span class=\"input-group-btn\">\r\n            <div class=\"btn btn-default\"><h3>Image Url!</h3></div>\r\n          </span>\r\n          <div class=\"input-group\">\r\n            <input\r\n              type=\"url\"\r\n              class=\"form-control\"\r\n              placeholder=\"Image Url...\"\r\n              [(ngModel)]=\"tempImgPuzzle\"\r\n              [ngModelOptions]=\"{ standalone: true }\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <!-- se seleziono file locale-->\r\n        <div class=\"image-url\" *ngIf=\"tempTipoUpload == 'locale'\">\r\n          <div class=\"button-pick-puzzle\">\r\n            <span class=\"input-group-btn\">\r\n              <div class=\"btn btn-default\">\r\n                <h3>Carica la tua immagine:</h3>\r\n              </div>\r\n            </span>\r\n            <button\r\n              mat-stroked-button\r\n              type=\"button\"\r\n              color=\"link\"\r\n              (click)=\"puzzlePicker.click()\"\r\n            >\r\n              Pick Image\r\n            </button>\r\n            <input\r\n              type=\"file\"\r\n              #puzzlePicker\r\n              (change)=\"onImagePicked($event, 'puzzle')\"\r\n            />\r\n\r\n            <div\r\n              class=\"puzzle-preview\"\r\n              *ngIf=\"tempImgPuzzle !== '' && tempImgPuzzle\"\r\n            >\r\n              <img [src]=\"tempImgPuzzle\" alt=\"puzzleImg\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Difficolta -->\r\n      <div class=\"difficolta\">\r\n        <h3>Difficulty Level</h3>\r\n        <div class=\"difficulty-levels\">\r\n          <div class=\"input-group\">\r\n            <input\r\n              type=\"radio\"\r\n              [(ngModel)]=\"tempDifficulty\"\r\n              name=\"difficulty\"\r\n              id=\"low\"\r\n              value=\"2\"\r\n              checked\r\n              [ngModelOptions]=\"{ standalone: true }\"\r\n            /><label for=\"low\"> Low </label>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <input\r\n              type=\"radio\"\r\n              [(ngModel)]=\"tempDifficulty\"\r\n              name=\"difficulty\"\r\n              id=\"medium\"\r\n              value=\"3\"\r\n              [ngModelOptions]=\"{ standalone: true }\"\r\n            /><label for=\"medium\"> Medium </label>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <input\r\n              type=\"radio\"\r\n              [(ngModel)]=\"tempDifficulty\"\r\n              name=\"difficulty\"\r\n              id=\"high\"\r\n              value=\"4\"\r\n              [ngModelOptions]=\"{ standalone: true }\"\r\n            /><label for=\"high\"> High </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Scelta attività successiva in caso di risposta corretta/errata -->\r\n    <section *ngIf=\"tempTipologiaAttivita != 'fine'\">\r\n      <!-- scelta id per domanda o quiz-->\r\n      <mat-form-field\r\n        *ngIf=\"\r\n          tempTipologiaAttivita == 'domanda' || tempTipologiaAttivita == 'quiz'\r\n        \"\r\n        class=\"example-full-width\"\r\n      >\r\n        <mat-label>Corretto</mat-label>\r\n        <mat-select\r\n          [(ngModel)]=\"tempCorrect\"\r\n          formControlName=\"tempCorrect\"\r\n          [(value)]=\"tempCorrect\"\r\n          panelClass=\"correct\"\r\n        >\r\n          <mat-option *ngFor=\"let act of storia.steps\" [value]=\"act.activityId\">\r\n            {{ act.activityId }} : {{ act.activityTitle }}\r\n          </mat-option>\r\n        </mat-select>\r\n        <mat-error *ngIf=\"form.get('tempCorrect').invalid\"\r\n          >Per favore inserisci id coretto</mat-error\r\n        >\r\n      </mat-form-field>\r\n\r\n      <mat-form-field\r\n        *ngIf=\"\r\n          tempTipologiaAttivita == 'domanda' || tempTipologiaAttivita == 'quiz'\r\n        \"\r\n        class=\"example-full-width\"\r\n      >\r\n        <mat-label>Sbagliato</mat-label>\r\n        <mat-select\r\n          [(ngModel)]=\"tempWrong\"\r\n          formControlName=\"tempWrong\"\r\n          [(value)]=\"tempWrong\"\r\n          panelClass=\"wrong\"\r\n        >\r\n          <mat-option *ngFor=\"let act of storia.steps\" [value]=\"act.activityId\">\r\n            {{ act.activityId }} : {{ act.activityTitle }}\r\n          </mat-option>\r\n        </mat-select>\r\n        <mat-error *ngIf=\"form.get('tempWrong').invalid\"\r\n          >Per favore inserisci id errato</mat-error\r\n        >\r\n      </mat-form-field>\r\n      <!-- scelta id per informazione, puzzle e dnd-->\r\n      <mat-form-field\r\n        *ngIf=\"\r\n          tempTipologiaAttivita == 'informazione' ||\r\n          tempTipologiaAttivita == 'puzzle' ||\r\n          tempTipologiaAttivita == 'dnd'\r\n        \"\r\n        class=\"example-full-width\"\r\n      >\r\n        <mat-label>Prossimo step</mat-label>\r\n        <mat-select\r\n          [(ngModel)]=\"tempCorrect\"\r\n          formControlName=\"tempCorrect\"\r\n          [(value)]=\"tempCorrect\"\r\n          panelClass=\"correct\"\r\n        >\r\n          <mat-option *ngFor=\"let act of storia.steps\" [value]=\"act.activityId\">\r\n            {{ act.activityId }} : {{ act.activityTitle }}\r\n          </mat-option>\r\n        </mat-select>\r\n        <mat-error *ngIf=\"form.get('tempCorrect').invalid\"\r\n          >Per favore inserisci id del prossimo step</mat-error\r\n        >\r\n      </mat-form-field>\r\n    </section>\r\n\r\n    <!-- Associazione immagine ad attività -->\r\n    <div *ngIf=\"tempTipologiaAttivita != 'puzzle'\">\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Nome immagine</mat-label>\r\n        <input matInput placeholder=\"Inserisci qui il nome dell'immagine\" />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Alt immagine</mat-label>\r\n        <input\r\n          matInput\r\n          placeholder=\"Inserisci qui il testo alternativo per il'immagine\"\r\n        />\r\n      </mat-form-field>\r\n      <div>\r\n        <button\r\n          mat-stroked-button\r\n          class=\"button-pick\"\r\n          type=\"button\"\r\n          color=\"link\"\r\n          (click)=\"filePicker.click()\"\r\n        >\r\n          Pick Image\r\n        </button>\r\n        <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\" />\r\n      </div>\r\n      <div style=\"width: 100%\">\r\n        <input\r\n          type=\"url\"\r\n          class=\"form-control\"\r\n          placeholder=\"Image Url...\"\r\n          style=\"font-size: 0.8em\"\r\n          [(ngModel)]=\"imagePreview\"\r\n          [ngModelOptions]=\"{ standalone: true }\"\r\n        />\r\n      </div>\r\n      <div\r\n        class=\"image-preview\"\r\n        *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\"\r\n      >\r\n        <img\r\n          class=\"img-responsive\"\r\n          [src]=\"imagePreview\"\r\n          [alt]=\"form.value.title\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <button\r\n        *ngIf=\"this.tempActivityId == -1\"\r\n        mat-raised-button\r\n        class=\"aggAttivita\"\r\n        color=\"primary\"\r\n        (click)=\"aggiungiAttivita(tempTipologiaAttivita)\"\r\n      >\r\n        Aggiungi Attività\r\n      </button>\r\n    </div>\r\n    <div class=\"container-button\">\r\n      <button\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        class=\"aggAttivita\"\r\n        (click)=\"onSaveActivity()\"\r\n        *ngIf=\"this.tempActivityId != -1\"\r\n      >\r\n        Salva modifiche\r\n      </button>\r\n\r\n      <button\r\n        mat-raised-button\r\n        color=\"warn\"\r\n        (click)=\"tempActivityId = -1; this.form.reset()\"\r\n        *ngIf=\"this.tempActivityId != -1\"\r\n      >\r\n        ESCI\r\n      </button>\r\n    </div>\r\n  </form>\r\n</mat-card>\r\n","<h2 mat-dialog-title>Delete</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <h3>Sei sicuro di volere eliminare questa attività?</h3>\r\n\r\n  <p>La cancellazione dell'attività sarà irreversibile</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Cancel</button>\r\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial (click)=\"eliminaAttivita(data.id)\">Continue</button>\r\n</mat-dialog-actions>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\n\r\nexport class SignupComponent {\r\n  isLoading=false;\r\n  titolo:string='Signup'\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public authService:AuthService){}\r\n\r\n  // ngOnInit() {\r\n  //   this.authStatusSub =  this.authService.getAuthStatusListener().subscribe(\r\n  //     authStatus => {\r\n  //       this.isLoading= false;\r\n  //     });\r\n  // }\r\n\r\n  // ngOnDestroy(){\r\n  //   this.authStatusSub.unsubscribe();\r\n  // }\r\n\r\n  //per creare un nuovo profilo tramite authService, dopo aver controllato la validità\r\n  onSignup(form: NgForm){\r\n    if(form.invalid){\r\n      return;\r\n    }\r\n    this.isLoading=true;\r\n    this.authService.createUser(form.value.email, form.value.password);\r\n  }\r\n}\r\n","<app-header [my-title]=\"titolo\"> </app-header>\r\n<div class=\"container\">\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n  <form (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\r\n    <mat-form-field>\r\n      <input matInput name=\"email\" ngModel type=\"email\" placeholder=\"E-Mail\" #emailInput=\"ngModel\" required email>\r\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\r\n    </mat-form-field>\r\n    <br>\r\n    <mat-form-field>\r\n      <input type=\"password\" name=\"password\" ngModel matInput placeholder=\"Password\" #passwordInput=\"ngModel\" required>\r\n      <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\r\n    </mat-form-field>\r\n    <br>\r\n    <button mat-raised-button color=\"accent\" type=\"submit\" *ngIf=\"!isLoading\">Signup</button>\r\n  </form>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\n\r\nexport class LoginComponent {\r\n  isLoading=false;\r\n  titolo: string = 'Login'\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(public authService:AuthService){}\r\n\r\n  ngOnInit(): void {\r\n    this.authStatusSub =  this.authService.getAuthStatusListener().subscribe(\r\n      authStatus => {\r\n        this.isLoading= false;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  onLogin(form: NgForm){\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading=true;\r\n    this.authService.login(form.value.email, form.value.password);\r\n  }\r\n}\r\n","<app-header [my-title]=\"titolo\"> </app-header>\r\n<div class=\"container\">\r\n  <form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\" *ngIf=\"!isLoading\">\r\n    <mat-form-field>\r\n      <input matInput name=\"email\" ngModel type=\"email\" placeholder=\"E-Mail\" #emailInput=\"ngModel\" required email>\r\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\r\n    </mat-form-field>\r\n    <br>\r\n    <mat-form-field>\r\n      <input type=\"password\" name=\"password\" ngModel matInput placeholder=\"Password\" #passwordInput=\"ngModel\" required>\r\n      <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\r\n    </mat-form-field>\r\n    <br>\r\n    <button mat-raised-button color=\"accent\" type=\"submit\" *ngIf=\"!isLoading\">Login</button>\r\n  </form>\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n</div>\r\n","import { Component, OnInit, ViewEncapsulation, Injectable } from '@angular/core';\r\nimport { DummyApiService } from '../../services/dummy-api.service';\r\nimport { Storia } from '../../interfaces/storia';\r\nimport { SweetAlert2LoaderService } from '@sweetalert2/ngx-sweetalert2';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { mimeType } from './mime-type.validator';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { saveAs } from 'file-saver/dist/FileSaver';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-autore',\r\n  templateUrl: './autore.component.html',\r\n  styleUrls: ['./autore.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n\r\n})\r\n\r\n@Injectable()\r\nexport class AutoreComponent implements OnInit {\r\n  titolo: string = \"Menu' Autore\";\r\n  storie: Storia[] = [];\r\n  storia: Storia;\r\n  myTempName: string = \"\";\r\n  myTempDidascalia: string = \"\";\r\n  myTempFasciaEta: string = \"\";\r\n  statoMod: boolean[] = [];\r\n  isLoading: boolean = false;\r\n  form: FormGroup;\r\n  imagePreview: string;\r\n  getStorySubscription: Subscription;\r\n\r\n  userId: string;\r\n  userIsAuthenticated = false;\r\n  imgurComplete = false;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(private api: DummyApiService, private swalLoader: SweetAlert2LoaderService, private router: Router, private http: HttpClient, public dialog: MatDialog, private authService: AuthService) {}\r\n\r\n  //Trasforma il file immagine in base64, dopo di che lo passiamo a un servizio che lo porta in un server online, e ci restiruisce il link\r\n  onImagePicked(event: Event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({ image: file });\r\n    this.form.get('image').updateValueAndValidity();\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imagePreview = reader.result as string;\r\n      let base64 = this.imagePreview.split('base64')\r\n      this.api.uploadImage(base64[1]).subscribe((res) => {\r\n        this.imagePreview = res.data.link\r\n        this.imgurComplete = true\r\n\r\n      })\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n\r\n  //Al click sul pulsante che porta a questo metodo, i dati inseriti vengono passati a db tramite un servizio di dummy-api,\r\n  //una volta conclusa l'operazione sarà visibile la storia\r\n  aggiungiStoria(): void {\r\n    this.isLoading = true;\r\n\r\n    if (this.form.invalid) {\r\n      alert(\"errore compila i tutti i campi\")\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n\r\n    let maxIdx = 0;\r\n\r\n    this.api.getStories().subscribe((risultato) => {\r\n      if (risultato && risultato.posts) {\r\n\r\n        if (risultato.maxPosts == 0) {\r\n          maxIdx = 0\r\n        }\r\n        risultato.posts.forEach(element => {\r\n          this.storie.push(this.api.reMap(element));\r\n\r\n          if (element.id == 0) {\r\n            maxIdx = 1\r\n          } else if (element.id >= maxIdx) {\r\n            maxIdx = Number(element.id) + 1\r\n          }\r\n        });\r\n      }\r\n      const tempStoria = {\r\n        id: maxIdx,\r\n        title: this.form.value.myTempName,\r\n        didascalia: this.form.value.myTempDidascalia,\r\n        fasciaEta: this.form.value.myTempFasciaEta,\r\n        image: this.imagePreview,\r\n        attivita: []\r\n      }\r\n\r\n      //Servizio di dummy api\r\n      this.api.addNewStory(tempStoria)\r\n        .subscribe(responseData => {\r\n          alert(\"fatto: \" + responseData.message)\r\n          this.isLoading = false;\r\n          this.refreshData();\r\n        });\r\n\r\n      this.form.reset();\r\n    })\r\n\r\n\r\n\r\n  }\r\n\r\n  //porta al component configura\r\n  configuraStoria(id: number): void {\r\n    this.router.navigateByUrl('configura/' + id);\r\n  }\r\n\r\n\r\n  //elimina la storia\r\n  eliminaStoria(id: number): void {\r\n    this.api.deleteStory(id).subscribe(\r\n      (responseData: any) => {\r\n        alert(responseData.message)\r\n        this.refreshData()\r\n      }\r\n    )\r\n  }\r\n\r\n  //Una volta completate le modifiche, verrano riportate a db e salvate\r\n  salvaModifiche(i: number) {\r\n\r\n    console.log(\"le mie modifiche sono :\");\r\n    let tempStoria: Storia;\r\n    this.api.getStoria(this.storie[i].id).subscribe((res) => {\r\n\r\n      tempStoria = this.api.reMap(res)\r\n      if (this.imagePreview != \"\") {\r\n        tempStoria.urlBackground = this.imagePreview\r\n      } else {\r\n        tempStoria.urlBackground = this.storie[i].urlBackground\r\n      }\r\n      tempStoria.nome = this.storie[i].nome\r\n      console.log(this.storie[i].nome)\r\n      this.api.updateStoria(tempStoria).subscribe(() => {\r\n        this.refreshData()\r\n      });\r\n    })\r\n\r\n  }\r\n\r\n  //Possibilità di scaricare la storia in formato json\r\n  download(i: number) {\r\n    let tempStoria: Storia;\r\n    this.api.getStoria(i).subscribe(storia => {\r\n      storia = this.api.reMapForDownload(storia)\r\n      const blob = new Blob([JSON.stringify(storia)], { type: 'text/json' });\r\n      const fileName = storia.title + '.json';\r\n      saveAs(blob, fileName);\r\n    }, err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  //Apre un mat-dialog con riferimento al upload-dialog.html per dare la possibilità di effettuare un upload di file json che usi un interfaccia:Storia\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(UploadDialog);\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}​​`);\r\n      this.refreshData()\r\n\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.userId = this.authService.getUserId();\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe(isAuthenticated => {\r\n        this.userIsAuthenticated = isAuthenticated;\r\n        this.userId = this.authService.getUserId();\r\n      });\r\n\r\n    this.form = new FormGroup({\r\n      myTempDidascalia: new FormControl(null, {\r\n        validators: [Validators.required]\r\n      }),\r\n      myTempName: new FormControl(null, {\r\n        validators: [Validators.required]\r\n      }),\r\n      myTempFasciaEta: new FormControl(null, {\r\n        validators: [Validators.required]\r\n      }),\r\n      image: new FormControl(null, {\r\n        validators: [Validators.required],\r\n        asyncValidators: [mimeType]\r\n      })\r\n    });\r\n    this.refreshData()\r\n  }\r\n\r\n  //Ricarica i dati sempre aggiornati\r\n  refreshData() {\r\n    if (this.getStorySubscription) {\r\n      this.getStorySubscription.unsubscribe()\r\n    }\r\n    this.getStorySubscription = this.api.getStories().subscribe(\r\n      (risultato) => {\r\n        this.storie = [];\r\n        if (risultato && risultato.posts) {\r\n          risultato.posts.forEach(element => {\r\n            this.storie.push(this.api.reMap(element));\r\n            console.log();\r\n          });\r\n        }\r\n        for (let i = 0; i < this.storie.length; i++) {\r\n          this.statoMod.push(false);\r\n        }\r\n      }\r\n    );\r\n\r\n    this.imgurComplete = false\r\n  }\r\n}\r\n\r\n\r\n//Componente per il dialog di upload\r\n@Component({\r\n  selector: 'upload-dialog',\r\n  templateUrl: 'upload-dialog.html',\r\n})\r\nexport class UploadDialog {\r\n  private selectedFile: File;\r\n\r\n  constructor(public dialogRef: MatDialogRef<UploadDialog>, private api: DummyApiService) { }\r\n\r\n  //Se si decide di chiuder il dialog senza effettuare operazioni\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  //Fa scegliere un file di cui effettuare l'upload\r\n  onFileSelect(event) {\r\n    this.selectedFile = event.target.files[0];\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsText(this.selectedFile, \"UTF-8\");\r\n    fileReader.onload = () => {\r\n      console.log(fileReader.result);\r\n      let storia = JSON.parse(fileReader.result as string)\r\n\r\n      let maxIdx = 0;\r\n      this.api.getStories().subscribe((risultato) => {\r\n        if (risultato && risultato.posts) {\r\n          if (risultato.maxPosts == 0) {\r\n            maxIdx = 0\r\n          }\r\n          risultato.posts.forEach(element => {\r\n            if (element.id == 0) {\r\n              maxIdx = 1\r\n            } else if (element.id >= maxIdx) {\r\n              maxIdx = Number(element.id) + 1\r\n            }\r\n          });\r\n        }\r\n\r\n        storia.id = maxIdx\r\n        //Servizio di dummy api\r\n        this.api.addNewStory(storia).subscribe(\r\n          (res) => {\r\n            if (res) {\r\n              alert(res.message)\r\n            } else {\r\n              alert(\"Generic error\")\r\n            }\r\n          }\r\n          ,\r\n          (err) => {\r\n            alert(JSON.stringify(err))\r\n          });\r\n      })\r\n    }\r\n    fileReader.onerror = (error) => {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n}​​\r\n","<app-header [my-title]=\"titolo\"> </app-header>\r\n<div class=\"container1\">\r\n  <mat-accordion multi=\"true\" *ngIf=\"storie.length > 0; else error\">\r\n    <mat-expansion-panel hideToggle>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          Elenco delle storie presenti nel database\r\n        </mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-expansion-panel *ngFor=\"let storia of storie; index as i\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <p id=\"storyTitle\">{{ storia.nome }}</p>\r\n        </mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n\r\n      <div class=\"container-panel\">\r\n        <div class=\"container-modifica\">\r\n          <button\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            (click)=\"statoMod[i] = !statoMod[i]\"\r\n          >\r\n            Modifica\r\n          </button>\r\n          <br />\r\n          <button\r\n            mat-raised-button\r\n            color=\"info\"\r\n            (click)=\"configuraStoria(storia.id)\"\r\n          >\r\n            Configura\r\n          </button>\r\n          <br />\r\n          <button mat-raised-button color=\"info\" (click)=\"download(storia.id)\">\r\n            Download JSON\r\n          </button>\r\n          <br />\r\n          <button [swal]=\"mioAlert1\" mat-raised-button color=\"warn\">\r\n            Elimina\r\n          </button>\r\n          <swal\r\n            #mioAlert1\r\n            confirmButtonText=\"Elimina\"\r\n            (confirm)=\"eliminaStoria(storia.id)\"\r\n          >\r\n          </swal>\r\n        </div>\r\n        <div class=\"image-container\">\r\n          <img\r\n            class=\"img-story\"\r\n            [src]=\"storia.urlBackground\"\r\n            [alt]=\"'  immagine sfondo di  ' + storia.nome\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"statoMod[i]\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          [placeholder]=\"storia.id\"\r\n          disabled\r\n        />\r\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"storia.nome\" />\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"storia.urlBackground\"\r\n        />\r\n\r\n        <div>\r\n          <button mat-stroked-button type=\"button\" (click)=\"filePicker.click()\">\r\n            Pick Image\r\n          </button>\r\n\r\n          <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\" />\r\n        </div>\r\n\r\n        <div\r\n          class=\"image-preview\"\r\n          *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\"\r\n        >\r\n          <img [src]=\"imagePreview\" [alt]=\"form.value.title\" />\r\n        </div>\r\n\r\n        <button mat-raised-button color=\"warn\" (click)=\"salvaModifiche(i)\">\r\n          Salva\r\n        </button>\r\n      </div>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n</div>\r\n<!-- end CONTAINER 1 -->\r\n\r\n<swal #mioAlert [showConfirmButton]=\"false\">\r\n  <div *swalPortal>\r\n    <form [formGroup]=\"form\">\r\n      <h1>name :</h1>\r\n      <input\r\n        formControlName=\"myTempName\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        type=\"text\"\r\n      />\r\n      <h1>didascalia :</h1>\r\n      <input\r\n        formControlName=\"myTempDidascalia\"\r\n        class=\"form-control\"\r\n        id=\"didascalia\"\r\n        type=\"text\"\r\n      />\r\n      <h1>fascia di età :</h1>\r\n\r\n      <mat-radio-group\r\n        formControlName=\"myTempFasciaEta\"\r\n        aria-label=\"Select an option\"\r\n      >\r\n        <mat-radio-button value=\"fasciaUno\">\r\n          <mat-card> 7 - 10 anni </mat-card>\r\n        </mat-radio-button>\r\n        <mat-radio-button value=\"fasciaDue\">\r\n          <mat-card> 11 - 14 anni </mat-card>\r\n        </mat-radio-button>\r\n        <mat-radio-button value=\"fasciaTre\">\r\n          <mat-card> 15 - 18 anni </mat-card>\r\n        </mat-radio-button>\r\n      </mat-radio-group>\r\n\r\n      <div>\r\n        <button mat-stroked-button type=\"button\" (click)=\"filePicker.click()\">\r\n          Pick Image\r\n        </button>\r\n        <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\" />\r\n      </div>\r\n      <div\r\n        class=\"image-preview\"\r\n        *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\"\r\n      >\r\n        <img [src]=\"imagePreview\" [alt]=\"form.value.title\" />\r\n      </div>\r\n    </form>\r\n    <button\r\n      *ngIf=\"imgurComplete == true\"\r\n      mat-raised-button\r\n      color=\"accent\"\r\n      (click)=\"aggiungiStoria()\"\r\n    >\r\n      Salva\r\n    </button>\r\n  </div>\r\n</swal>\r\n<div class=\"btn-container\">\r\n  <button [swal]=\"mioAlert\" mat-raised-button color=\"accent\">aggiunta</button>\r\n  <button mat-raised-button (click)=\"openDialog()\">Upload</button>\r\n</div>\r\n<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n\r\n<ng-template #error>\r\n  <div>\r\n    <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\"\r\n      >error</mat-icon\r\n    >\r\n    <h2>Errore</h2>\r\n  </div>\r\n\r\n  <template> </template>\r\n</ng-template>\r\n","<h1 mat-dialog-title>Hi!​​</h1>\r\n<div mat-dialog-content>\r\n  <p>Puoi fare l'upload di un file JSON</p>\r\n\r\n  <input style=\"display: none\" type=\"file\" (change)=\"onFileSelect($event)\" #hiddenfileinput>\r\n\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">Close</button>\r\n  <button mat-button  cdkFocusInitial (click)=\"hiddenfileinput.click()\"><i class=\"material-icons left\">cloud</i>Select JSON</button>\r\n</div>\r\n","import { TypeScriptEmitter } from '@angular/compiler';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DummyApiService } from 'src/app/services/dummy-api.service';\r\nimport { Squadra } from \"../../interfaces/squadra\";\r\nimport { Router } from '@angular/router';\r\nconst MAXPARTECIPANTI = 5;\r\nconst MINPARTECIPANTI = 2;\r\n\r\nconst myAlert = {\r\n  type: 'danger',\r\n  message: 'compila tutti i campi'\r\n}\r\n@Component({\r\n  selector: 'app-player',\r\n  templateUrl: './player.component.html',\r\n  styleUrls: ['./player.component.scss']\r\n})\r\nexport class PlayerComponent implements OnInit {\r\n\r\n  titolo: string = \"Player\";\r\n  tipologiaGruppo = \"\";\r\n  fasciaEta = \"\";\r\n  storie = [];\r\n  traccia:any = -1;\r\n  playClicked = false;\r\n  formError = false;\r\n  dimensioni = [];\r\n  alerts = [];\r\n  squadre: Squadra[] = []\r\n  idClasseUsati = 0;\r\n  nSquadre = -1;\r\n  nPartecipanti = -1;\r\n  nPartecipantiAggiunti = 0;\r\n  personeSquadra = -1;\r\n  checkPartecipanti: boolean[] = [];\r\n  contatore = 0;\r\n\r\n  //Metodo get del servizio dummyApi che restituisce elenco delle storie tramite observable\r\n  getStories() {\r\n    this.apiDb.getStories().subscribe((risultato) => {\r\n      this.storie = risultato.posts\r\n    })\r\n  }\r\n\r\n  //Metodo chiamato dal radio button nel player per resituire il numero di studenti possibili per squadra\r\n  popolaDimensioni(tipo:string){\r\n    this.dimensioni = []\r\n    if(tipo=='classe'){\r\n      console.log('classe');\r\n\r\n      for (let i = 15; i <= 25; i++) {\r\n        this.dimensioni.push(i)\r\n      }\r\n    } else if(tipo=='gruppo') {\r\n      console.log('gruppo');\r\n      for (let i = 2; i <= 5; i++) {\r\n        this.dimensioni.push(i)\r\n      }\r\n    }\r\n  }\r\n\r\n  //Metodo utilizzato per aggiungere il singolo player a squadra con idSquadra dato\r\n  aggiungiPlayer(idSquadra) {\r\n     if (this.nPartecipantiAggiunti + 1 > this.nPartecipanti) return;\r\n     if (this.squadre[idSquadra].players.length + 1 > MAXPARTECIPANTI) return;\r\n\r\n\r\n    for (let i = 0; i < this.checkPartecipanti.length; i++) {\r\n      if (this.checkPartecipanti[i] == false) {\r\n        this.squadre[idSquadra].players.push(\r\n          'player' + i\r\n        )\r\n        this.nPartecipantiAggiunti += 1\r\n        this.checkPartecipanti[i] = true;\r\n        i = this.checkPartecipanti.length\r\n      }\r\n    }\r\n  }\r\n\r\n  //Metodo utilizzato per rimuovere un player da squadra con idSquadra dato\r\n  rimuoviPlayer(idSquadra) {\r\n    var posDaRimuovere = this.squadre[idSquadra].players.pop();\r\n    this.nPartecipantiAggiunti--\r\n    this.checkPartecipanti[(posDaRimuovere.substring(6, 8))] = false\r\n  }\r\n\r\n  //Metodo che inizializza squadre e players chiamato prima di popolare il numero di squadre minimo per partecipanti selezionato\r\n  azzeraSquadre() {\r\n    this.squadre = []\r\n    this.nPartecipantiAggiunti = 0\r\n  }\r\n\r\n  //Metodo di aggiunta squadre che viene chiamato ciclicamente quando viene selezionato il numero di partecipanti in modalità classe\r\n  aggiungiSquadra() {\r\n    let lastIdx = this.squadre.length\r\n    this.squadre.push(\r\n      {\r\n        id: lastIdx,\r\n        players: [],\r\n        name: \" squadra\" + this.contatore\r\n      }\r\n      )\r\n    this.contatore++;\r\n  }\r\n\r\n  //Metodo che consente di eliminare una squadra specifica tramite idSquadra e scala gli id delle squadre successive\r\n  eliminaSquadra(idSquadra) {\r\n    var playerRemoved = this.squadre[idSquadra].players.length;\r\n    for (let index = 0; index < playerRemoved; index++) {\r\n      this.rimuoviPlayer(idSquadra);\r\n    }\r\n\r\n    this.squadre.splice(idSquadra, 1);\r\n    for (let index = idSquadra; index < this.squadre.length; index++) {\r\n      this.squadre[index].id = this.squadre[index].id - 1;\r\n    }\r\n  }\r\n\r\n  //Metodo di aggiunta squadra abbinato al button visibile nel player, per permettere di creare un numero maggiore di squadre rispetto al \"numero minimo\" di squadre create per default\r\n  aggiungiNuovaSquadra() {\r\n    let lastIdx = this.squadre.length\r\n    this.squadre.push(\r\n      {\r\n        id: lastIdx,\r\n        players: [],\r\n        name: \" squadra\" + this.contatore\r\n      }\r\n    )\r\n    this.contatore++\r\n    this.aggiungiPartecipanti(MINPARTECIPANTI, lastIdx);\r\n  }\r\n\r\n  //Metodo di assegnamento dei players per squadra. Utilizzato nella creazione delle squadre di default con numero di partecipanti per squadra uguale a 2: min di partecipanti per squadra\r\n  aggiungiPartecipanti(numPartecipanti, idS) {\r\n    for (let index = 0; index < numPartecipanti; index++) {\r\n      this.aggiungiPlayer(idS)\r\n    }\r\n  }\r\n\r\n  //Metodo che viene chiamato in automatico quando l' utente seleziona il numero di partecipanti totali sa suddividere in squadre\r\n  //Per default assumiamo come numero massimo di partecipanti per squadra uguale a 5 player e attraverso il quale si ottiene il numero minimo di squadre\r\n  //In base al numero minimo di partecipanti vengono utilizzati i metodi azzeraSquadra, aggiungiSquadra e aggiungiPartecipanti sopra descritti\r\n  nPartecipantiChanged() {\r\n    this.contatore=0;\r\n\r\n    for (let i = 0; i < this.nPartecipanti; i++) {\r\n      this.checkPartecipanti[i] = false;\r\n\r\n    }\r\n\r\n    let minNGruppi = this.nPartecipanti / MAXPARTECIPANTI\r\n    if (minNGruppi > Math.trunc(minNGruppi)) {\r\n      this.nSquadre = Math.trunc(minNGruppi + 1)\r\n    } else {\r\n      this.nSquadre = minNGruppi\r\n    }\r\n    this.azzeraSquadre()\r\n    for (let i = 0; i < this.nSquadre; i++) {\r\n      this.aggiungiSquadra()\r\n      if (this.tipologiaGruppo=='gruppo') {\r\n        this.aggiungiPartecipanti(this.nPartecipanti, i)\r\n      } else {\r\n        this.aggiungiPartecipanti(MINPARTECIPANTI, i)\r\n      }\r\n    }\r\n  }\r\n\r\n  //Il metodo PlayClick è un metodo che gestisce la visualizzazione dei QR code per le modalità gruppo o classe.\r\n  playClick() {\r\n    if (this.fasciaEta == '' || this.traccia == -1 || this.tipologiaGruppo == \"\") {\r\n      this.showFormError()\r\n    } else if (this.tipologiaGruppo == \"classe\" && this.nPartecipantiAggiunti < this.nPartecipanti) {\r\n      this.showFormError()\r\n    } else {\r\n      this.playClicked = true;\r\n    }\r\n\r\n    if(this.tipologiaGruppo!=\"individuale\"){\r\n      this.apiDb.getGames().subscribe( conta => {\r\n        let numeroGame = conta.maxPosts\r\n        let maxClasse =0;\r\n        for (let i = 0; i < conta.posts.length; i++) {\r\n          if(conta.posts[i].idClasse>=maxClasse){\r\n            maxClasse=conta.posts[i].idClasse+1\r\n          }\r\n\r\n        }\r\n        for (let i = 0; i < this.squadre.length; i++) {\r\n          console.log('Il mio id squadra: '+this.squadre[i].id)\r\n          this.apiDb.addNewGame(this.squadre[i].id,maxClasse, numeroGame, this.squadre[i].players.length).subscribe((res)=> {\r\n            console.log(res);\r\n          })\r\n          this.squadre[i].idPartita=numeroGame\r\n          numeroGame++;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  //Metodo che attraverso il servizio di routing gestisce la navigazione del player verso la partita\r\n  iniziaPartita(id: number, idPartita:number = -1): void {\r\n\r\n    if(idPartita!=-1){\r\n      this.router.navigateByUrl('visualizza/'+id+'/'+idPartita);\r\n    }else {\r\n      this.router.navigateByUrl('visualizza/' + id);\r\n    }\r\n  }\r\n\r\n\r\n  constructor(private apiDb: DummyApiService, private activeRoute: ActivatedRoute, private router: Router) {}\r\n\r\n  //Metodo di pulizia dell' alert associato al click sulla x di chiusura\r\n  close() {\r\n    this.alerts = []\r\n  }\r\n\r\n  //Metodo di visualizzazione degli errori associati alla funzione play click\r\n  showFormError() {\r\n    this.alerts = []\r\n    this.alerts.push(myAlert)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.activeRoute.snapshot.params.tipo) {\r\n      this.tipologiaGruppo = this.activeRoute.snapshot.params.tipo\r\n    }\r\n    if (this.activeRoute.snapshot.params.fascia) {\r\n      this.fasciaEta = this.activeRoute.snapshot.params.fascia\r\n    }\r\n    if (this.activeRoute.snapshot.params.traccia) {\r\n      this.traccia = parseInt(this.activeRoute.snapshot.params.traccia)\r\n    }\r\n    if(this.activeRoute.snapshot.params.partita){\r\n      this.iniziaPartita(this.traccia, this.activeRoute.snapshot.params.partita)\r\n      return\r\n    }\r\n    if(this.activeRoute.snapshot.params.mode == 'autoplay'){\r\n      this.iniziaPartita(this.traccia)\r\n    }\r\n    this.getStories();\r\n  }\r\n\r\n\r\n}\r\n","<!-- Alert è un componente per fornire messaggi di feedback contestuali per l'utente.\r\nSupporta diversi tipi di alert e può essere ignorato. -->\r\n<ngb-alert\r\n*ngFor=\"let alert of alerts\"\r\n[type]=\"alert.type\"\r\n(close)=\"close(alert)\">\r\n{{ alert.message }}\r\n</ngb-alert>\r\n\r\n<section *ngIf=\"!playClicked\" class=\"mainSection\">\r\n\r\n  <!-- Section di selezione tipologia gioco: individuale/gruppo/squadra -->\r\n  <section id=\"tipoS\">\r\n    <p style=\"font-size: 1.5em\">\r\n      Seleziona la storia che preferisci e inizia a giocare\r\n    </p>\r\n    <div class=\"tipoStoria\">\r\n      <!-- Card per titpologia gruppo: individuale -->\r\n      <div class=\"card\">\r\n        <input type=\"radio\" name=\"tipologiaGruppo\" id=\"Individuale\" value=\"individuale\" [(ngModel)]=\"tipologiaGruppo\" />\r\n        <label class=\"fa fa-code\" for=\"Individuale\">\r\n          <i id=\"icon-tipos\" class=\"material-icons\" aria-hidden=\"false\" aria-label=\"person icon\">person</i>\r\n          <br />\r\n          <p>Individuale</p>\r\n        </label>\r\n      </div>\r\n      <!-- Card per tipologia gruppo: gruppo -->\r\n      <div class=\"card\">\r\n        <input type=\"radio\" name=\"tipologiaGruppo\" id=\"Gruppo\" value=\"gruppo\" [(ngModel)]=\"tipologiaGruppo\"\r\n          (click)=\"popolaDimensioni('gruppo')\" />\r\n        <label class=\"fa fa-code\" for=\"Gruppo\">\r\n          <i id=\"icon-tipos\" class=\"material-icons\" aria-hidden=\"false\" aria-label=\"group icon\">group</i>\r\n          <br />\r\n          <p>Gruppo</p>\r\n          <p>(2-5 persone)</p>\r\n        </label>\r\n      </div>\r\n      <!-- Card per tipologia gruppo: classe -->\r\n      <div class=\"card\">\r\n        <input type=\"radio\" name=\"tipologiaGruppo\" id=\"Classe\" value=\"classe\" [(ngModel)]=\"tipologiaGruppo\"\r\n          (click)=\"popolaDimensioni('classe')\" />\r\n        <label class=\"fa fa-code\" for=\"Classe\">\r\n          <i id=\"icon-tipos\" class=\"material-icons\" aria-hidden=\"false\" aria-label=\"person icon\">groups</i>\r\n          <br />\r\n          <div class=\"text\">\r\n            <p>Classe</p>\r\n            <p>(15-25 persone)</p>\r\n          </div>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <!-- div di selezione del numero di partecipanti per modalità di gioco: gruppo o classe\r\n  Predisposizione per creazione di default delle squadre -->\r\n  <div class=\"container2\">\r\n    <mat-form-field appearance=\"fill\" *ngIf=\"tipologiaGruppo == 'classe' || tipologiaGruppo == 'gruppo'\"\r\n      ngDefaultControl name=\"nPartecipanti\">\r\n      <mat-label>Numero di studenti</mat-label>\r\n      <mat-select [(ngModel)]=\"nPartecipanti\" (ngModelChange)=\"nPartecipantiChanged()\">\r\n        <mat-option *ngFor=\"let dimensione of dimensioni\" [value]=\"dimensione\">\r\n          {{ dimensione }} studenti\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <!-- Section di gestione delle squadre -->\r\n  <section id=\"sec2\" *ngIf=\"nPartecipanti != -1 && tipologiaGruppo == 'classe'\">\r\n    <div class=\"partecipanti\">\r\n      <p>Partecipanti : {{ nPartecipantiAggiunti }} / {{ nPartecipanti }}</p>\r\n    </div>\r\n    <!-- Pulsante di aggiunta squadra ulteriore alle predeterminate di default -->\r\n    <button *ngIf=\"nPartecipanti - nPartecipantiAggiunti >= 2\" (click)=\"aggiungiNuovaSquadra()\" mat-stroked-button\r\n      color=\"primary\">\r\n      + Aggiungi squadra\r\n    </button>\r\n    <!-- Visualizzazione in cards delle squadre -->\r\n    <div class=\"container3\">\r\n      <div class=\"card\" *ngFor=\"let squadra of squadre\">\r\n        <div class=\"heading\">\r\n          <div class=\"nomeS-container\">\r\n            <p id=\"nomeSquadra\">{{ squadra.name }}</p>\r\n          </div>\r\n          <div class=\"button-container\">\r\n            <button mat-mini-fab color=\"warn\" *ngIf=\"this.squadre.length > this.nSquadre\"\r\n              (click)=\"eliminaSquadra(squadra.id)\">\r\n              <i class=\"material-icons\">clear</i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"content\">\r\n          <p style=\"font-weight: bold\">Giocatori:</p>\r\n          <ul>\r\n            <li *ngFor=\"let player of squadra.players\">\r\n              <p>{{ player }}</p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"button-add-container\">\r\n          <button *ngIf=\"\r\n              this.nPartecipantiAggiunti < this.nPartecipanti ||\r\n              squadra.players.length < 5\r\n            \" mat-mini-fab color=\"primary\" (click)=\"aggiungiPlayer(squadra.id)\">\r\n            <i class=\"material-icons\">add</i>\r\n          </button>\r\n        </div>\r\n        <div class=\"button-rem-container\">\r\n          <button *ngIf=\"squadra.players.length > 2\" mat-mini-fab color=\"warn\" (click)=\"rimuoviPlayer(squadra.id)\">\r\n            <i class=\"material-icons\">delete_forever</i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <!-- fine section di gestione squadre-->\r\n\r\n  <!-- Section per selezione della fascia di età la quale determina le tracce al quale il player potrà giocare -->\r\n  <section id=\"sec3\">\r\n    <div class=\"container4\" aria-label=\"Select an option\" (click)=\"traccia = -1\">\r\n      <!-- FasciaUno: 7-10 anni -->\r\n      <div class=\"card\">\r\n        <input type=\"radio\" name=\"fasciaEta\" id=\"7-10\" value=\"fasciaUno\" [(ngModel)]=\"fasciaEta\" />\r\n        <label for=\"7-10\">\r\n          <p>7 - 10 anni</p>\r\n        </label>\r\n      </div>\r\n      <!-- -fascia due: 11-14 anni -->\r\n      <div class=\"card\">\r\n        <input type=\"radio\" name=\"fasciaEta\" id=\"11-14\" value=\"fasciaDue\" [(ngModel)]=\"fasciaEta\" />\r\n        <label for=\"11-14\">\r\n          <p>11 - 14 anni</p>\r\n        </label>\r\n      </div>\r\n      <!-- FasciaTre: 15-18 anni -->\r\n      <div class=\"card\">\r\n        <input type=\"radio\" name=\"fasciaEta\" id=\"15-18\" value=\"fasciaTre\" [(ngModel)]=\"fasciaEta\" />\r\n        <label for=\"15-18\">\r\n          <p>15 - 18 anni</p>\r\n        </label>\r\n      </div>\r\n    </div>\r\n    <!-- Visualizzazione delle tracce associate per fascia di età -->\r\n    <div class=\"container5\" *ngIf=\"fasciaEta != ''\">\r\n      <form aria-label=\"Select an option\" *ngFor=\"let storia of storie\">\r\n        <div class=\"card\" *ngIf=\"storia.fasciaEta == fasciaEta\">\r\n          <input [id]=\"storia.id\" name=\"traccia\" type=\"radio\" [value]=\"storia.id\" [(ngModel)]=\"traccia\" />\r\n          <label [for]=\"storia.id\">\r\n            <i id=\"icon-tipos\" class=\"material-icons\">history_edu</i>\r\n            <br />\r\n            <p>{{ storia.title }}</p>\r\n            <img [src]=\"storia.urlBackground\" />\r\n          </label>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </section>\r\n\r\n  <!-- Sezione riepilogativa dei parametri di gioco selezionati -->\r\n  <div class=\"container6\">\r\n    <div class=\"container-riepilogo\">\r\n      <p class=\"title\">Riepilogo</p>\r\n    </div>\r\n    <div class=\"container-riepilogo\">\r\n      <p>Gruppo : {{ tipologiaGruppo }}</p>\r\n    </div>\r\n    <div class=\"container-riepilogo\">\r\n      <p>Fascia di età : {{ fasciaEta }}</p>\r\n    </div>\r\n    <div *ngIf=\"traccia != -1\">\r\n      <div class=\"container-riepilogo\">\r\n        <p>Traccia: {{ traccia }}</p>\r\n      </div>\r\n\r\n      <!-- Modalità singolo -->\r\n      <div class=\"container-riepilogo\">\r\n        <qrcode *ngIf=\"\r\n            tipologiaGruppo == 'individuale'\r\n          \" [qrdata]=\"\r\n            'https://site192029.tw.cs.unibo.it/player/' +\r\n            tipologiaGruppo +\r\n            '/' +\r\n            fasciaEta +\r\n            '/' +\r\n            traccia +\r\n            '/autoplay'\r\n          \" [width]=\"156\" [errorCorrectionLevel]=\"'M'\"></qrcode>\r\n      </div>\r\n      <div class=\"container-riepilogo\">\r\n        <button *ngIf=\"tipologiaGruppo == 'individuale'\" mat-raised-button color=\"primary\"\r\n          (click)=\"iniziaPartita(this.traccia)\">\r\n          Inizia Partita\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Modalità gruppo o squadra -->\r\n  <div class=\"container-riepilogo\">\r\n    <div *ngIf=\"\r\n        tipologiaGruppo != 'individuale' &&\r\n        tipologiaGruppo != '' &&\r\n        ((tipologiaGruppo == 'classe' &&\r\n          nPartecipantiAggiunti == nPartecipanti) ||\r\n          (tipologiaGruppo == 'gruppo' && nPartecipanti > 0)) &&\r\n          traccia != -1\r\n      \" class=\"fixedLowRight\" (click)=\"playClick()\">\r\n      <button mat-fab color=\"warn\" class=\"my-fab-button\">\r\n        <mat-icon class=\"icon-tipoS\">play_arrow</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!-- fine MainSection -->\r\n\r\n<section *ngIf=\"playClicked\">\r\n  <div *ngIf=\"tipologiaGruppo == 'classe' || tipologiaGruppo == 'gruppo'\">\r\n    <p style=\"\r\n        font-family: 'Montserrat', sans-serif;\r\n        font-size: 2em;\r\n        color: darkgray;\r\n        margin-top: 1em;\r\n        font-weight: bold;\r\n      \">\r\n      Ecco i vostri QR Code!\r\n    </p>\r\n    <div *ngFor=\"let s of squadre\" class=\"container6\">\r\n      <div class=\"title-container\">\r\n        <p class=\"title\">{{ s.name }}</p>\r\n      </div>\r\n      <button mat-raised-button color=\"primary\" (click)=\"iniziaPartita(this.traccia, s.idPartita)\">\r\n        Inizia Partita\r\n      </button>\r\n      <div class=\"qrcode-container\">\r\n        <qrcode [qrdata]=\"\r\n            'https://site192029.tw.cs.unibo.it/player/' +\r\n            tipologiaGruppo +\r\n            '/' +\r\n            fasciaEta +\r\n            '/' +\r\n            traccia +\r\n            '/autoplay/' +\r\n            s.idPartita\r\n          \" [width]=\"156\" [errorCorrectionLevel]=\"'M'\"></qrcode>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, Input, NgZone, OnInit } from '@angular/core';\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\nimport { DragDrop } from 'src/app/interfaces/storia';\r\nimport { VisualizzaComponent } from '../visualizza/visualizza.component';\r\nimport * as _ from 'lodash';\r\nimport { ThrowStmt } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-dragndrop',\r\n  templateUrl: './dragndrop.component.html',\r\n  styleUrls: ['./dragndrop.component.scss']\r\n})\r\nexport class DragndropComponent implements OnInit {\r\n\r\n  @Input('order') order:DragDrop[] = [];\r\n  steps:number=0;\r\n  isCompleted:boolean = false;\r\n  arrayNgFor: DragDrop[];\r\n  hoProceduto = false;\r\n  constructor(private visComp: VisualizzaComponent,private ngZone : NgZone) {\r\n    this.arrayNgFor = this.order\r\n  }\r\n\r\n  //Metodo chiamato ogni volta che sposto una tessera (drop appunto significa rilascio)\r\n  drop(event: CdkDragDrop<number[]>) {\r\n    this.steps++\r\n    moveItemInArray(this.arrayNgFor, event.previousIndex, event.currentIndex);\r\n    this.isCompleted = this.verifyAccomplishment()\r\n  }\r\n\r\n  //Permette di accedere allo step successivo\r\n  avanzamentoStep(idQ){\r\n    if(this.isCompleted){\r\n      this.hoProceduto=true;\r\n      this.visComp.gestisciAvanzamento(undefined);\r\n    }\r\n  }\r\n\r\n  //A ogni spostamenta di una tessera verifica che tutte siano nella posizione corretta\r\n  //Una volta che l'array è stato ordinato restituisce complete=true, così permettendo l'avanzamento\r\n  verifyAccomplishment():boolean{\r\n    let complete = true\r\n\r\n    for (let i = 0; i < this.arrayNgFor.length; i++) {\r\n      if(this.arrayNgFor[i].posizione != i){\r\n       complete = false;\r\n       break;\r\n      }\r\n    }\r\n    return complete\r\n  }\r\n\r\n\r\n   shuffle(){\r\n    let myOrder = _.shuffle(this.order)\r\n    this.ngZone.run(()=>{\r\n        this.arrayNgFor = myOrder\r\n    })\r\n    console.log(this.order)\r\n  }\r\n  ngOnInit(): void {\r\n      this.shuffle()\r\n\r\n}\r\n}\r\n","<div cdkDropList   class=\"example-list\" (cdkDropListDropped)=\"drop($event)\">\r\n  <div class=\"example-box\" *ngFor=\"let item of this.arrayNgFor; index as k\" cdkDrag [ngClass]=\"{ green: k == item.posizione }\">\r\n    <h3 >{{item.desc}}</h3>\r\n  </div>\r\n</div>\r\n<div class=\"successMessage\" *ngIf=\"isCompleted\">\r\n  <p>Bravissimo, hai ordinato correttamente gli elementi!</p>\r\n  <p>Hai completato il gioco in {{ steps }} mosse.</p>\r\n  <button mat-fab color=\"primary\" class=\"my-fab-button\" [disabled]=\"hoProceduto\">\r\n    <i class=\"material-icons\" (click)=\"avanzamentoStep()\" >play_arrow</i>\r\n  </button>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './components/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'Project';\r\n\r\n\r\n  constructor(private authService: AuthService){}\r\n\r\n  ngOnInit() {\r\n    this.authService.autoAuthUser();\r\n  }\r\n\r\n}\r\n","<main>\n  <router-outlet></router-outlet>\n</main>\n","import { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { AngularFileUploaderModule } from \"angular-file-uploader\";\r\n\r\n\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatExpansionModule } from \"@angular/material/expansion\";\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\r\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\n\r\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { NgbAlertModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { QRCodeModule } from 'angularx-qrcode';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AutoreComponent, UploadDialog } from './components/autore/autore.component';\r\nimport { VisualizzaComponent } from './components/visualizza/visualizza.component';\r\nimport { HomePageComponent } from './components/home-page/home-page.component';\r\nimport { ModificaComponent } from './components/autore/modifica/modifica.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { PlayerComponent } from './components/player/player.component';\r\nimport { ConfiguraComponent, CancellazioneDialog } from './components/autore/configura/configura.component';\r\nimport { LoginComponent } from './components/auth/login/login.component';\r\nimport { SignupComponent } from './components/auth/signup/signup.component';\r\nimport { DragndropComponent } from './components/dragndrop/dragndrop.component';\r\nimport { ClassificaComponent } from './components/classifica/classifica.component';\r\nimport { PuzzleComponent } from './components/puzzle/puzzle.component';\r\n\r\nimport { AuthInterceptor } from \"./components/auth/auth-interceptor\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AutoreComponent,\r\n    UploadDialog,\r\n    VisualizzaComponent,\r\n    HomePageComponent,\r\n    ModificaComponent,\r\n    HeaderComponent,\r\n    PlayerComponent,\r\n    ConfiguraComponent,\r\n    CancellazioneDialog,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    DragndropComponent,\r\n    ClassificaComponent,\r\n    PuzzleComponent,\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    FontAwesomeModule,\r\n    NgbModule,\r\n    NgbAlertModule,\r\n    QRCodeModule,\r\n    SweetAlert2Module.forRoot(),\r\n\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatListModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatDialogModule,\r\n    MatGridListModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatStepperModule,\r\n    MatSnackBarModule,\r\n    DragDropModule,\r\n    MatProgressBarModule,\r\n    MatSidenavModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    AngularFileUploaderModule\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\r\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { floatLabel: 'always' } }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.css']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n\r\n  titolo: string = \"Home Page\";\r\n\r\n  constructor(  private router : Router ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n}\r\n","<app-header [my-title]=\"titolo\"></app-header>\r\n<app-player ></app-player>\r\n\r\n","import {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router\r\n} from \"@angular/router\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean | Observable<boolean> | Promise<boolean> {\r\n    const isAuth = this.authService.getIsAuth();\r\n    if (!isAuth) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n    return isAuth;\r\n  }\r\n}\r\n","import { AbstractControl } from \"@angular/forms\";\r\nimport { Observable, Observer, of } from \"rxjs\";\r\n\r\nexport const mimeType = (\r\n  control: AbstractControl\r\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  if (typeof(control.value) === 'string') {\r\n    return of(null);\r\n  }\r\n\r\n  const file = control.value as File;    //prendo il file\r\n  const fileReader = new FileReader();   //Riesco a leggerlo\r\n\r\n  //Creo un Observable\r\n  const frObs = new Observable(\r\n    (observer: Observer<{ [key: string]: any }>) => {\r\n\r\n      //Attende l'evento load end e inizia la sua funzione dopo il \"fileReader.readAsArrayBuffer(file);\"\r\n      fileReader.addEventListener(\"loadend\", () => {\r\n\r\n        //Logica di validazione\r\n\r\n        //Uint8Array => Unsigned Integers of 8 bits.\r\n        // U => Unsigned, cioè solo valori positivi (i 'sign' negativi non sono ammessi)\r\n        // Int => Integers, quindi solo numeri interi\r\n        // 8 => utilizzati solo 8 nit (quindi numeri da 0 a 255 compresi)\r\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);  //subarray ci serve per prenderci il mime-type del file\r\n        let header = \"\";\r\n        let isValid = false;\r\n        for (let i = 0; i < arr.length; i++) {\r\n          header += arr[i].toString(16); //per convertirlo a esadecimale\r\n        }\r\n        switch (header) {\r\n          case \"89504e47\":    //png\r\n            isValid = true;\r\n            break;\r\n          case \"ffd8ffe0\":    //jfif jpe jpeg jpg\r\n          case \"ffd8ffe1\":    //jpg\r\n          case \"ffd8ffe2\":    //jpeg\r\n          case \"ffd8ffe3\":    //jpeg\r\n          case \"ffd8ffe8\":    //jpg\r\n          // case \"47494638\":    //gif\r\n            isValid = true;\r\n            break;\r\n          default:\r\n            isValid = false; // Or you can use the blob.type as fallback\r\n            break;\r\n        }\r\n        if (isValid) {\r\n          observer.next(null);\r\n        } else {\r\n          observer.next({ invalidMimeType: true });\r\n        }\r\n        observer.complete();\r\n      });\r\n      fileReader.readAsArrayBuffer(file);\r\n    }\r\n  );\r\n  return frObs;\r\n};\r\n","import {\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    // const authToken = this.authService.getToken();\r\n    let authToken;\r\n\r\n    if(req.url.includes('imgur')){\r\n      authToken = \"d4e418b1180149c2f908769861db2fa0d6a60ec2\"\r\n    }else {\r\n      authToken = this.authService.getToken();\r\n    }\r\n\r\n    const authRequest = req.clone({\r\n      headers: req.headers.set('Authorization', \"Bearer \" + authToken)\r\n    });\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nimport { AuthData } from \"./auth-data.model\";\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class AuthService {\r\n  private isAuthenticated = false;\r\n  private token: string;\r\n  private tokenTimer: any;\r\n  private userId: string;\r\n  private authStatusListener = new Subject<boolean>();\r\n\r\n  constructor(private http: HttpClient, private router: Router, private _snackBar: MatSnackBar) {}\r\n\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n\r\n  getIsAuth() {\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  getUserId() {\r\n    return this.userId;\r\n  }\r\n\r\n  getAuthStatusListener() {\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n\r\n  createUser(email: string, password: string) {\r\n    const authData: AuthData = { email: email, password: password };\r\n    this.http\r\n      .post(\"https://site192029.tw.cs.unibo.it/api/user/signup\", authData)\r\n      .subscribe(response => {\r\n\r\n        this._snackBar.open(\"Utente Creato Correttamente , ora esegui il Login\", \"OK\", {\r\n          duration: 10000,\r\n        });\r\n        this.router.navigate([\"/user/login\"]);\r\n\r\n      }, error => {\r\n        this.authStatusListener.next(false);\r\n        this._snackBar.open(\"Profilo già esistente, cambia l'email \", \"OK\", {\r\n          duration: 10000,\r\n\r\n        })\r\n      });\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    const authData: AuthData = { email: email, password: password };\r\n    this.http\r\n      .post<{ token: string; expiresIn: number, userId: string }>(\r\n        \"https://site192029.tw.cs.unibo.it/api/user/login\",\r\n        authData\r\n      )\r\n      .subscribe(response => {\r\n        const token = response.token;\r\n        this.token = token;\r\n        if (token) {\r\n          const expiresInDuration = response.expiresIn;\r\n          this.setAuthTimer(expiresInDuration);\r\n          this.isAuthenticated = true;\r\n          this.authStatusListener.next(true);\r\n          const now = new Date();\r\n          const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\r\n          console.log(expirationDate);\r\n          this.saveAuthData(token, expirationDate, this.userId);\r\n          this.router.navigate([\"/autore\"]);\r\n\r\n          this.userId = response.userId;\r\n        }\r\n      },error=>{  this.authStatusListener.next(false);\r\n        alert(\"Email o password non sono corretti,riprova!\")\r\n\r\n      });\r\n  }\r\n\r\n  autoAuthUser() {\r\n    const authInformation = this.getAuthData();\r\n    if (!authInformation) {\r\n      return;\r\n    }\r\n    const now = new Date();\r\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\r\n    if (expiresIn > 0) {\r\n      this.token = authInformation.token;\r\n      this.isAuthenticated = true;\r\n      this.setAuthTimer(expiresIn / 1000);\r\n      this.authStatusListener.next(true);\r\n      this.userId = authInformation.userId;\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.authStatusListener.next(false);\r\n    this.userId = null\r\n    clearTimeout(this.tokenTimer);\r\n    this.clearAuthData();\r\n    this.router.navigate([\"/\"]);\r\n  }\r\n\r\n  private setAuthTimer(duration: number) {\r\n    console.log(\"Setting timer: \" + duration);\r\n    this.tokenTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, duration * 1000);\r\n  }\r\n\r\n  private saveAuthData(token: string, expirationDate: Date, userId:string) {\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expiration\", expirationDate.toISOString());\r\n    localStorage.setItem(\"userId\", userId);\r\n  }\r\n\r\n  private clearAuthData() {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expiration\");\r\n    localStorage.removeItem(\"userId\");\r\n  }\r\n\r\n  private getAuthData() {\r\n    const token = localStorage.getItem(\"token\");\r\n    const expirationDate = localStorage.getItem(\"expiration\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    if (!token || !expirationDate) {\r\n      return;\r\n    }\r\n    return {\r\n      token: token,\r\n      expirationDate: new Date(expirationDate),\r\n      userId: userId\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Game } from 'src/app/interfaces/game';\r\nimport { DummyApiService } from 'src/app/services/dummy-api.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-classifica',\r\n  templateUrl: './classifica.component.html',\r\n  styleUrls: ['./classifica.component.scss']\r\n})\r\n\r\nexport class ClassificaComponent implements OnInit {\r\n  @Input('idClasse') idClasse: number;\r\n  displayedColumns: string[] = ['idSquadra', 'idClasse', 'score'];\r\n  games: Game[] = [];\r\n  dataSource: MatTableDataSource<Game>;\r\n\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private apiDb : DummyApiService) {\r\n\r\n  }\r\n  //Prende tutti i games da db e li ordina per punteggio\r\n  ngOnInit(): void {\r\n\r\n    console.log(this.idClasse);\r\n\r\n    this.apiDb.getGames().subscribe((res)=>{\r\n\r\n      res.posts.forEach(element => {\r\n        if(element.idClasse == this.idClasse){\r\n          this.games.push(element)\r\n        }\r\n      });\r\n      // this.games = res.posts\r\n      this.dataSource = new MatTableDataSource(this.games);\r\n      this.dataSource.sort = this.sort;\r\n    })\r\n  }\r\n\r\n}\r\n\r\n","<p class=\"title\">SCOPRI SE HAI VINTO!!</p>\r\n<div class=\"table-container\">\r\n  <mat-table\r\n    [dataSource]=\"dataSource\"\r\n    matSort\r\n    matSortActive=\"score\"\r\n    matSortDirection=\"desc\"\r\n  >\r\n    <!-- nomeSquadra Column -->\r\n    <ng-container matColumnDef=\"idSquadra\">\r\n      <mat-header-cell *matHeaderCellDef>idSquadra </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let game\"> {{ game.idSquadra }} </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- idClasse Column -->\r\n    <ng-container matColumnDef=\"idClasse\">\r\n      <mat-header-cell *matHeaderCellDef>idClasse </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let game\"> {{ game.idClasse }} </mat-cell>\r\n    </ng-container>\r\n\r\n    <!-- punteggio Column -->\r\n    <ng-container matColumnDef=\"score\">\r\n      <mat-header-cell *matHeaderCellDef>Score </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let game\">\r\n        {{ game.score | number: \"1.0-2\" }}\r\n      </mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n  </mat-table>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AutoreComponent } from './components/autore/autore.component';\r\nimport { PlayerComponent } from './components/player/player.component';\r\nimport { HomePageComponent } from './components/home-page/home-page.component';\r\nimport { VisualizzaComponent } from './components/visualizza/visualizza.component';\r\nimport { ConfiguraComponent } from './components/autore/configura/configura.component';\r\nimport { LoginComponent } from './components/auth/login/login.component';\r\nimport { AuthGuard } from \"./components/auth/auth.guard\";\r\nimport { SignupComponent } from './components/auth/signup/signup.component';\r\nimport { ClassificaComponent } from './components/classifica/classifica.component';\r\nimport { PuzzleComponent } from './components/puzzle/puzzle.component';\r\n\r\nconst routes: Routes = [\r\n  // { path: \"home\" , component:HomePageComponent},\r\n  { path: \"autore\" , component:AutoreComponent,canActivate:[AuthGuard]},\r\n  { path: \"player\" , component:PlayerComponent},\r\n  { path: \"visualizza/:id/:partita\" , component:VisualizzaComponent},\r\n  { path: \"visualizza/:id\" , component:VisualizzaComponent},\r\n  { path: \"\" , component:HomePageComponent},\r\n  { path: \"player/:tipo/:fascia/:traccia/:mode/:partita\", component:PlayerComponent},\r\n  { path: \"player/:tipo/:fascia/:traccia/:mode\", component:PlayerComponent},\r\n  { path: \"player/:tipo/:fascia/:traccia\", component:PlayerComponent},\r\n\r\n  { path: \"configura/:id\", component: ConfiguraComponent , canActivate: [AuthGuard] },\r\n  { path: \"login\", component: LoginComponent},\r\n  { path: \"signup\", component: SignupComponent },\r\n  { path: \"classifica\", component: ClassificaComponent },\r\n  { path: \"puzzle\", component: PuzzleComponent },\r\n\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Step, Storia } from '../interfaces/storia';\r\nimport { Game } from '../interfaces/game';\r\n// import { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n// import { head } from 'lodash';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class DummyApiService {\r\n  [x: string]: any;\r\n\r\n\r\n\r\n  constructor(public http: HttpClient, private router: Router) { }\r\n\r\n\r\n  //Metodo remapping della storia impiegato per creare corrispondenza tra l' oggetto Storia generato da frontend con lo schema Storia del backend\r\n  reMap(element): Storia {\r\n    let miaStoriaDaRitornare = {\r\n      nome: element.title,\r\n      id: element.id,\r\n      didascalia: element.didascalia,\r\n      fasciaEta: element.fasciaEta,\r\n      urlBackground: element.image,\r\n      steps: element.attivita\r\n    }\r\n\r\n    return miaStoriaDaRitornare;\r\n  }\r\n\r\n\r\n  //Metodo remapping della storia impiegato per creare corrispondenza tra oggetto backend e oggetto frontend\r\n  reMapForDownload(element) {\r\n    let miaStoriaDaRitornare = {\r\n      title: element.title,\r\n      id: element.id,\r\n      didascalia: element.didascalia,\r\n      fasciaEta: element.fasciaEta,\r\n      image: element.image,\r\n      attivita: this.reMapActivityForDownload(element.attivita)\r\n    }\r\n    return miaStoriaDaRitornare;\r\n  }\r\n\r\n  //Metodo utilizzato dal reMapForDownload per mappare un array di attività ottenute da backend\r\n  reMapActivityForDownload(element: Array<Step>) {\r\n\r\n    for (let i = 0; i < element.length; i++) {\r\n\r\n      element[i] = {\r\n        activityId: element[i].activityId,\r\n        activityTitle: element[i].activityTitle,\r\n        action: element[i].action,\r\n        backImg: element[i].backImg,\r\n        //PUZZLE\r\n        puzzleImg: element[i].puzzleImg,\r\n        difficulty: element[i].difficulty,\r\n        //QUIZ\r\n        quizCorrectIdx: element[i].quizCorrectIdx,\r\n        answers: element[i].answers,\r\n        //D&D\r\n        order: element[i].order,\r\n        //DOMANDA\r\n        risposteDomanda: element[i].risposteDomanda,\r\n        tipoDomanda: element[i].tipoDomanda,\r\n\r\n        correctId: element[i].correctId,\r\n        wrongId: element[i].wrongId,\r\n      }\r\n    }\r\n    return element\r\n  }\r\n  // delete\r\n  // per eliminare una storia verificando l'id\r\n  deleteStory(id: number) {\r\n    return this.http.delete('https://site192029.tw.cs.unibo.it/api/stories/' + id);\r\n  }\r\n  //per eliminare un attività verificando l'id\r\n  deleteActivity(activityId: number) {\r\n    return this.http.delete('https://site192029.tw.cs.unibo.it/api/stories/' + activityId);\r\n  }\r\n\r\n\r\n  // GET\r\n  // ci restituisce tutte le storie\r\n  getStories(): Observable<any> {\r\n    return this.http.get('https://site192029.tw.cs.unibo.it/api/stories/');\r\n  }\r\n\r\n  // ci restituisce la singola storia,verificando l'id\r\n  getStoria(id: number): Observable<any> {\r\n    return this.http.get(\"https://site192029.tw.cs.unibo.it/api/stories/\" + id)\r\n  }\r\n\r\n  getStep(idStoria: number) : Observable<any> {\r\n    return this.http.get(\"https://site192029.tw.cs.unibo.it/api/stories/\" + idStoria)\r\n  }\r\n\r\n  //ci restituisce tutte le partite\r\n  getGames(): Observable<any> {\r\n    return this.http.get('https://site192029.tw.cs.unibo.it/api/games/');\r\n  }\r\n\r\n  //ci restituisce la singola partita,verificando l'id\r\n  getGame(id: number): Observable<any> {\r\n    return this.http.get(\"https://site192029.tw.cs.unibo.it/api/games/\" + id)\r\n  }\r\n\r\n\r\n  //PUT\r\n  // per salvare le modifiche di una Storia\r\n  updateStoria(storia: Storia) {\r\n    //  let headers = new HttpHeaders().set(\"Authorization\", 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFAYS5pdCIsInVzZXJJZCI6IjVmYmZkM2YwZGUwNjRiMzRhNDE4ZTJkYiIsImlhdCI6MTYxMTA3MjA3NSwiZXhwIjoxNjExMDc1Njc1fQ.dLyXbhY_q6ptcBZP226Y3IP8Ds1d0eNJN096C_3MhEE')\r\n    //  let options = { headers: headers };\r\n    // console.log(options);\r\n    return this.http.put(\"https://site192029.tw.cs.unibo.it/api/stories/\" + storia.id, storia)\r\n  }\r\n // per salvare le modifiche di una partita nel caso in cui la partita è di tipologia Gruppo o Classe\r\n  updateGame(idPartita: number, prossimoId: number, punteggio: number) {\r\n    console.log(\"da frontend mando : \" + punteggio)\r\n    return this.http\r\n      .put(\"https://site192029.tw.cs.unibo.it/api/games/\" + idPartita, {\r\n        prossimoId: prossimoId,\r\n        score: punteggio\r\n      })\r\n  }\r\n\r\n  //POST\r\n  // per creare una nuova Storia\r\n  addNewStory(storyData) {\r\n    return this.http.post<{ message: string, storia: Storia }>(\"https://site192029.tw.cs.unibo.it/api/stories/\", storyData)\r\n  }\r\n\r\n  //per creare una nuova partita\r\n  addNewGame(idSquadra: Number, idClasse: Number, idPartita: Number, numeroPlayer: Number) {\r\n    const gameData = {\r\n      idSquadra: idSquadra,\r\n      idClasse: idClasse,\r\n      idPartita: idPartita,\r\n      numeroPlayer: numeroPlayer\r\n    }\r\n    return this.http.post<{ message: string, game: Game }>(\"https://site192029.tw.cs.unibo.it/api/games/\", gameData)\r\n  }\r\n\r\n//per caricare un immagine tramite il metodo post\r\n  uploadImage(base64imgStr: String) {\r\n\r\n    return this.http.post<any>(\"https://api.imgur.com/3/image\", { image: base64imgStr })\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}